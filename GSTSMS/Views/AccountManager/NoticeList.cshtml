@model IEnumerable<GSTSMSLibrary.AccountManager.AccountManager>

@{
    ViewBag.Title = "Notice List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- ✅ Style Dependencies -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/1.13.6/css/dataTables.bootstrap4.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/buttons/2.4.1/css/buttons.bootstrap4.min.css" rel="stylesheet" />
<link href="~/Content/modules/bootstrap-daterangepicker/daterangepicker.css" rel="stylesheet" />
<link href="~/Content/css/style.css" rel="stylesheet" />
<link href="~/Content/css/components.css" rel="stylesheet" />
<link href="~/Content/css/custom-style.css" rel="stylesheet" />

<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h4>Notice List</h4>
        <div>
            <button id="btnAddNotice" class="btn btn-primary">Add Notice</button>
            <button type="button" class="btn btn-primary daterange-btn ml-2">
                <i class="fas fa-calendar"></i> <span>Select Date</span>
            </button>
        </div>
        <input type="hidden" id="fromDate1" />
        <input type="hidden" id="toDate1" />
        <div id="exportButtons" class="d-inline-flex gap-2 ml-2"></div>
    </div>

    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-striped table-hover w-100" id="noticeTable">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="checkbox-all" /></th>
                        <th>Sr.No</th>
                        <th>Notice Title</th>
                        <th>Description</th>
                        <th>Publish Date</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var item in Model)
                        {
                            <tr>
                                <td><input type="checkbox" class="row-checkbox" /></td>
                                <td></td>
                                <td>@item.NoticeTitle</td>
                                <td>@item.Description</td>
                                <td>@(item.PublishDate?.ToString("dd-MM-yyyy"))</td>
                                <td class="text-nowrap">
                                    <button class="btn btn-sm btn-primary editNoticeBtn" data-id="@item.NoticeAnnouncementCode" title="Edit">
                                        <i class="fa fa-edit"></i>
                                    </button>
                                    <input type="hidden" name="Document" value="@item.Document" />
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr><td colspan="6" class="text-center text-danger">No records found.</td></tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- 📥 Modal for Add Notice -->
<div class="modal fade" id="noticeModal" tabindex="-1" aria-labelledby="noticeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="noticeModalLabel">Add Notice</h5>
                <a href="@Url.Action("NoticeList", "AccountManager")" class="btn btn-icon btn-danger"><i class="fas fa-times"></i></a>
            </div>
            <div class="modal-body" id="addNoticeFormContainer"></div>
        </div>
    </div>
</div>

<!-- 📥 Modal for Edit Notice -->
<div class="modal fade" id="editNoticeModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="editNoticeContent"></div>
    </div>
</div>

@section Scripts {
    <!-- ✅ JS Dependencies -->
    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/dataTables.bootstrap4.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.bootstrap4.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.53/vfs_fonts.js"></script>
    <script src="~/Content/modules/moment.min.js"></script>
    <script src="~/Content/modules/bootstrap-daterangepicker/daterangepicker.js"></script>

    <script>
        $(document).ready(function () {
            var table = $('#noticeTable').DataTable({
                dom: '<"row mb-2"<"col-md-6"f><"col-md-6 text-right"B>>' +
                    '<"row"<"col-sm-12"tr>>' +
                    '<"row mt-2"<"col-sm-5"i><"col-sm-7"p>>',
                paging: true,
                searching: true,
                info: true,
                responsive: true,
                pageLength: 10,
                columnDefs: [{ orderable: false, targets: [0, 5] }],
                buttons: [
                    {
                        extend: 'pdfHtml5',
                        text: '<i class="fas fa-file-pdf text-danger"></i>',
                        className: 'btn btn-outline-danger btn-sm',
                        orientation: 'landscape',
                        pageSize: 'A4',
                        exportOptions: {
                            columns: [1, 2, 3, 4],
                            rows: function (idx, data, node) {
                                return $(node).find('input.row-checkbox').is(':checked');
                            },
                            format: {
                                body: function (data, row, column, node) {
                                    return column === 0 ? (row + 1).toString() : $(node).text().trim();
                                }
                            }
                        },
                        action: function (e, dt, button, config) {
                            var selectedRows = dt.rows().nodes().to$().find('input.row-checkbox:checked').length;
                            if (selectedRows === 0) {
                                alert('Please select at least one row to export.');
                                return;
                            }
                            $.fn.dataTable.ext.buttons.pdfHtml5.action.call(this, e, dt, button, config);
                        }
                    },
                    {
                        extend: 'excelHtml5',
                        text: '<i class="fas fa-file-excel text-success"></i>',
                        className: 'btn btn-outline-success btn-sm',
                        exportOptions: {
                            columns: [1, 2, 3, 4],
                            rows: function (idx, data, node) {
                                return $(node).find('input.row-checkbox').is(':checked');
                            },
                            format: {
                                body: function (data, row, column, node) {
                                    return column === 0 ? (row + 1).toString() : $(node).text().trim();
                                }
                            }
                        },
                        action: function (e, dt, button, config) {
                            var selectedRows = dt.rows().nodes().to$().find('input.row-checkbox:checked').length;
                            if (selectedRows === 0) {
                                alert('Please select at least one row to export.');
                                return;
                            }
                            $.fn.dataTable.ext.buttons.excelHtml5.action.call(this, e, dt, button, config);
                        }
                    },
                    {
                        extend: 'csvHtml5',
                        text: '<i class="fas fa-file-csv text-primary"></i>',
                        className: 'btn btn-outline-primary btn-sm',
                        exportOptions: {
                            columns: [1, 2, 3, 4],
                            rows: function (idx, data, node) {
                                return $(node).find('input.row-checkbox').is(':checked');
                            },
                            format: {
                                body: function (data, row, column, node) {
                                    return column === 0 ? (row + 1).toString() : $(node).text().trim();
                                }
                            }
                        },
                        action: function (e, dt, button, config) {
                            var selectedRows = dt.rows().nodes().to$().find('input.row-checkbox:checked').length;
                            if (selectedRows === 0) {
                                alert('Please select at least one row to export.');
                                return;
                            }
                            $.fn.dataTable.ext.buttons.csvHtml5.action.call(this, e, dt, button, config);
                        }
                    }
                ],


                drawCallback: function () {
                    var api = this.api();
                    api.rows({ page: 'current' }).every(function (rowIdx, tableLoop, rowLoop) {
                        $(this.node()).find('td:eq(1)').html(rowLoop + 1);
                    });
                }
            });

            table.buttons().container().appendTo('#exportButtons');

            // Select All
            $('#checkbox-all').on('change', function () {
                var isChecked = $(this).is(':checked');
                table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);
            });
            // Update "Select All" checkbox based on individual checkbox state across all pages
            $('#noticeTable').on('change', '.row-checkbox', function () {
                var total = table.rows().nodes().to$().find('.row-checkbox').length;
                var checked = table.rows().nodes().to$().find('.row-checkbox:checked').length;
                $('#checkbox-all').prop('checked', total === checked);
            });
            $('#noticeTable').on('change', '.row-checkbox', function () {
                $('#checkbox-all').prop('checked', $('.row-checkbox:checked').length === $('.row-checkbox').length);
            });

            // 🔘 Date Range Filter
            $.fn.dataTable.ext.search.push(function (settings, data) {
                var min = $('#fromDate1').val();
                var max = $('#toDate1').val();
                var dateStr = data[4];
                if (!min && !max) return true;
                if (!dateStr) return false;

                var rowDate = moment(dateStr, 'DD-MM-YYYY');
                var minDate = min ? moment(min, 'DD-MM-YYYY') : null;
                var maxDate = max ? moment(max, 'DD-MM-YYYY') : null;

                if (!rowDate.isValid()) return false;
                if (minDate && rowDate.isBefore(minDate, 'day')) return false;
                if (maxDate && rowDate.isAfter(maxDate, 'day')) return false;

                return true;
            });

            $('.daterange-btn').daterangepicker({
                locale: { format: 'DD-MM-YYYY' },
                startDate: moment().startOf('month'),
                endDate: moment()
            }, function (start, end) {
                $('#fromDate1').val(start.format('DD-MM-YYYY'));
                $('#toDate1').val(end.format('DD-MM-YYYY'));
                $('.daterange-btn span').html(start.format('DD-MM-YYYY') + ' - ' + end.format('DD-MM-YYYY'));
                table.draw();
            });

            // 🔘 Load Add Notice Modal
            $('#btnAddNotice').click(function () {
                $.ajax({
                    url: '@Url.Action("AddNotice", "AccountManager")',
                    type: 'GET',
                    success: function (result) {
                        $('#addNoticeFormContainer').html(result);
                        const noticeModal = new bootstrap.Modal(document.getElementById('noticeModal'));
                        noticeModal.show();
                    },
                    error: function () {
                        alert("Failed to load Add Notice form.");
                    }
                });
            });

            // 🔘 Load Edit Notice Modal
            $('#noticeTable').on('click', '.editNoticeBtn', function () {
                var noticeCode = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("EditNotice", "AccountManager")',
                    data: { noticeCode: noticeCode },
                    success: function (html) {
                        $('#editNoticeContent').html(html);
                        const modal = new bootstrap.Modal(document.getElementById('editNoticeModal'));
                        modal.show();
                    },
                    error: function () {
                        alert("Failed to load edit form.");
                    }
                });
            });
        });
    </script>
    <style>
        .dataTables_filter {
            text-align: left !important;
        }

            .dataTables_filter input {
                border-radius: 6px;
                padding: 6px 10px;
                border: 1px solid #ccc;
            }

        .dataTables_wrapper .dataTables_paginate .paginate_button {
            padding: 6px 10px;
            margin: 2px;
            border-radius: 6px;
        }
    </style>

}
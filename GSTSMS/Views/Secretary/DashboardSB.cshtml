
@{
    ViewBag.Title = "DashboardSB";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <!-- General CSS Files -->
    <link rel="stylesheet" href="~/Content/modules/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/Content/modules/fontawesome/css/all.min.css">

    <!-- CSS Libraries -->
    <link rel="stylesheet" href="~/Content/modules/jqvmap/dist/jqvmap.min.css">
    <link rel="stylesheet" href="~/Content/modules/weather-icon/css/weather-icons.min.css">
    <link rel="stylesheet" href="~/Content/modules/weather-icon/css/weather-icons-wind.min.css">
    <link rel="stylesheet" href="~/Content/modules/summernote/summernote-bs4.css">

    <link rel="stylesheet" href="~/Content/modules/bootstrap-daterangepicker/daterangepicker.css">
    <link rel="stylesheet" href="~/Content/modules/bootstrap-colorpicker/dist/css/bootstrap-colorpicker.min.css">
    <link rel="stylesheet" href="~/Content/modules/bootstrap-timepicker/css/bootstrap-timepicker.min.css">


    <!-- Template CSS -->
    <link rel="stylesheet" href="~/Content/css/style.css">
    <link rel="stylesheet" href="~/Content/css/components.css">


    <link href="~/Content/modules/datatables/datatables.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.7.0.min.js"></script>
    <script src="~/Content/modules/moment.min.js"></script>
    <script src="~/Content/modules/datatables/datatables.min.js"></script>

    <link rel="stylesheet" href="~/Content/css/SecretaryDashboardSB.css">

    <script src="https://cdn.datatables.net/buttons/2.4.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/2.4.1/js/buttons.print.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
</head>


<body>
    <!-- Main Content -->
    <div class="main-content">
        <section class="section">


            <!------------------------------------------------------------------------------------------------------------------------------------------------------------------->
            <!-- Sticky Filter Button -->
            <button id="filterToggleBtnSB" class="btn btn-primary">
                <i class="fas fa-filter" style="color: black; font-size: 30px;"></i>
            </button>

            <!-- Filter Panel -->
            <div class="filter-right-SB" id="customDateRangeSB" style="display: none;">
                <div class="input-group">
                    <label class="input-group-text">📅 Date</label>
                    <button type="button" class="btn btn-primary" id="daterangeInputSB" style="width: 200px; text-align: left;">
                        <span id="selectedDateTextSB">Select Date Range</span>
                    </button>
                </div>
            </div>

            <!------------------------------------------------------------------------------------------------------------------------------------------------------------------->
            <!-- 4 Cards-->
            <div class="row">

                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title font-weight-bold">Maintenance</h5>
                            <p><strong>Total Maintenance:</strong> <span id="totalMaintenanceValue" class="text-dark font-weight-bold">₹@ViewBag.TotalMaintenance</span></p>

                            <div class="progress" style="height: 20px; border-radius: 10px; overflow: hidden;">
                                <!-- Collected Bar -->
                                <div id="collectedMaintenanceBar" class="progress-bar"
                                     role="progressbar"
                                     style=" width: @(ViewBag.CollectedPercentage + "%"); background-color: #8C6C9C;"
                                     title="@(ViewBag.CollectedPercentage)% Received">
                                </div>

                                <!-- Due Bar -->
                                <div id="DueMaintenanceBar" class="progress-bar"
                                     role="progressbar"
                                     style="width: @(ViewBag.DuePercentage + "%"); background-color: #c1afd3;"
                                     title="@(ViewBag.DuePercentage)% Pending">
                                </div>
                            </div>


                            <div class="row mt-3">
                                <div class="col text-left">
                                    <span class="text-danger font-weight-bold">Received</span><br>
                                    <span id="collectedMaintenanceValue" class="text-dark font-weight-bold">₹@ViewBag.CollectedMaintenance</span>
                                </div>
                                <div class="col text-right">
                                    <span class="text-warning font-weight-bold">Pending</span><br>
                                    <span id="dueMaintenanceValue" class="text-dark font-weight-bold">₹@ViewBag.DueMaintenance</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-6 col-md-6 col-sm-12">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title font-weight-bold">Expenses</h5>
                            <p><strong>Total Expense:</strong> <span id="totalExpenceValue" class="text-dark font-weight-bold">₹@ViewBag.TotalExpence</span></p>

                            <!-- Custom Stacked Progress Bar -->
                            <div class="progress" style="height: 20px; border-radius: 10px; overflow: hidden;">
                                <div id="CompletedExpenceBar" class="progress-bar " role="progressbar"
                                     style="width: @(ViewBag.ExpencePercentage + "%"); background-color: #8C6C9C;"
 

                                     title="@(ViewBag.ExpencePercentage)% Cleared">

                                </div>
                                <div id="PendingExpenceBar" class="progress-bar  " role="progressbar"
                                 style="width: @(ViewBag.PendingExpencePercentage + "%");  background-color: #c1afd3;"
      
    
                                     title="@ViewBag.PendingExpencePercentage% Outstanding">
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="col text-left">
                                    <span class="text-danger font-weight-bold">Cleared</span><br>
                                    <span id="CompleletdExpenceValue" class="text-dark font-weight-bold">₹@ViewBag.Expence</span>
                                </div>
                                <div class="col text-right">
                                    <span class="text-warning font-weight-bold">Outstanding</span><br>
                                    <span id="PendingExpenceValue" class="text-dark font-weight-bold">₹@ViewBag.PendingExpenceAmount</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

            <!-- 4 Cards End-->
            <!--Visitor Parking-->

            <div class="row mt-4">

                <div class="col-lg-6 col-md-12 col-12 col-sm-12" id="parkingChart" style="height: 400px;"></div>

                <!-- Highcharts JS -->
                <script src="https://code.highcharts.com/highcharts.js"></script>
                <script src="https://code.highcharts.com/highcharts-3d.js"></script>
                <script src="https://code.highcharts.com/modules/accessibility.js"></script>


                <!--Visitor Parking End-->
                <!-- Todays Visitor Start-->

                <div class="col-lg-6 col-md-12 col-12 col-sm-12">
                    <div class="card">

                        <h4 class="text-dark mt-1 pl-4" style="font-size: 1.2rem; font-weight: 900;"></h4>

                        <div style="height: 370px;">
                            <!-- Top Row: 3 Items -->
                            <div class="row justify-content-center pb-2">
                                <div class="col-4 text-center mt-3">
                                    <div class="avatar-item" onclick="loadGuestVisitorListSB()">
                                        <img alt="Guest" src="~/Content/img/avatar/Guest.png" class="img-fluid" style="max-width: 125px;" data-toggle="tooltip" title="Guest">
                                        <div class="avatar-badge" id="guestCount">@ViewBag.GuestVisitorCount</div>
                                    </div>
                                    <div class="text-dark"><strong>Guest</strong></div>
                                </div>
                                <div class="col-4 text-center mt-3">
                                    <div class="avatar-item" onclick="loadDeliveryVisitorListSB()">
                                        <img alt="Delivery" src="~/Content/img/avatar/Delivery.png" class="img-fluid" style="max-width: 125px;" data-toggle="tooltip" title="Delivery">
                                        <div class="avatar-badge" id="deliveryCount">@ViewBag.DeliveryVisitorCount</div>
                                    </div>
                                    <div class="text-dark"><strong>Delivery</strong></div>
                                </div>
                                <div class="col-4 text-center mt-3">
                                    <div class="avatar-item" onclick="loadVendorVisitorListSB()">
                                        <img alt="Vendor" src="~/Content/img/avatar/Vendor.png" class="img-fluid" style="max-width: 125px;" data-toggle="tooltip" title="Vendor">
                                        <div class="avatar-badge" id="vendorCount">@ViewBag.VendorVisitorCount</div>
                                    </div>
                                    <div class="text-dark"><strong>Vendor</strong></div>
                                </div>
                            </div>

                            <!-- Bottom Row: 2 Items Centered -->
                            <div class="row justify-content-center">
                                <div class="col-4 text-center mt-1">
                                    <div class="avatar-item" onclick="loadWorkerVisitorListSB()">
                                        <img alt="Worker" src="~/Content/img/avatar/Worker1.png" class="img-fluid" style="max-width: 125px; " data-toggle="tooltip" title="Worker">
                                        <div class="avatar-badge" id="workerCount">@ViewBag.WorkerVisitorCount</div>
                                    </div>
                                    <div class="text-dark"><strong>Worker</strong></div>
                                </div>
                                <div class="col-4 text-center mt-1">
                                    <div class="avatar-item" onclick="loadServiceVisitorListSB()">
                                        <img alt="Service" src="~/Content/img/avatar/Service.png" class="img-fluid" style="max-width: 125px; " data-toggle="tooltip" title="Service">
                                        <div class="avatar-badge" id="ServiceCount">@ViewBag.ServiceVisitorCount</div>
                                    </div>
                                    <div class="text-dark"><strong>Service</strong></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Todays Visitor End-->

            </div>


            <!-- Complaints & Attendance Charts Row -->
            <div class="row">
                <!-- Complaints Chart (Left) -->
                <div class="col-md-6">
                    <div id="complaintsChart" style="height: 400px; margin-top:25px; margin-bottom: 25px;"></div>
                </div>

                <!-- Attendance Chart (Right) -->
                <div class="col-md-6 d-flex flex-column" style="position: relative; margin-top: 25px;">

                    <div id="attendanceVariablePie" style="height: 400px; margin-top: 5px;"></div>
                </div>
            </div>


            <script src="https://code.highcharts.com/modules/exporting.js"></script>
            <script src="https://code.highcharts.com/modules/variable-pie.js"></script>
            <script src="https://code.highcharts.com/modules/accessibility.js"></script>


            <!-- Charts Row -->
            <div class="row mt-4">
                <!-- Expense Chart (Left) -->
                <div class="col-md-6">
                    <div id="expenseChart"></div>
                </div>

                <!-- Maintenance Chart (Right) -->
                <div class="col-md-6">
                    <div id="maintenanceChart"></div>
                </div>
            </div>

            <!-- Upcoming Programs & Administrative Summary -->

            <div class="container mt-4">

                <h4 class="text-left mb-3 font-weight-bold text-dark">Upcoming Schedule Overview</h4>
                <!-- Tabs -->
                <ul class="nav nav-tabs" id="meetingEventTabs">
                    <li class="nav-item">
                        <a class="nav-link active" id="meetings-tab" data-toggle="tab" href="#meetings">Upcoming Meetings</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" id="events-tab" data-toggle="tab" href="#events">Upcoming Events</a>
                    </li>

                </ul>

                <!-- Tab Content -->
                <div class="tab-content mt-3">
                    <!-- Meetings Tab -->
                    <div class="tab-pane fade show active" id="meetings">
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped custom-table">
                                <thead  style="background-color: #615677";class="table-dark ">
                                    <tr>

                                        <th  class="text-white">Meeting Title</th>
                                        <th  class="text-white">Created By</th>
                                        <th  class="text-white">Meeting Agenda</th>
                                        <th class="text-white">Meeting Date</th>
                                        <th  class="text-white">Location</th>
                                        <th class="text-white">Created Date</th>
                                    </tr>
                                </thead>
                                <tbody id="meetingTable">
                                    <!-- Meeting Data Loaded Here -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Events Tab -->
                    <div class="tab-pane fade" id="events">
                        <div class="table-responsive">
                            <table class="table table-bordered table-striped custom-table">
                                <thead style="background-color: #615677" ;class="table-dark ">
                                    <tr>

                                        <th class="text-white">Event Type</th>
                                        <th class="text-white">Event Name</th>
                                        <th class="text-white">Vendor Name</th>
                                        <th class="text-white">Description</th>
                                        <th class="text-white">Place</th>
                                        <th class="text-white">From Date</th>
                                        <th class="text-white">To Date</th>

                                    </tr>
                                </thead>
                                <tbody id="eventTable">
                                    <!-- Event Data Loaded Here -->
                                </tbody>
                            </table>
                        </div>
                    </div>

                </div>
            </div>

        </section>
    </div>

    <!-- Modal for Collected Maintenance -->
    <div class="modal fade" id="collectedMaintenanceModal" tabindex="-1" role="dialog" aria-labelledby="collectedMaintenanceModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="collectedMaintenanceContent">

            </div>
        </div>
    </div>

    <!-- Modal for Due Maintenance -->
    <div class="modal fade" id="DueMaintenanceModal" tabindex="-1" role="dialog" aria-labelledby="DueMaintenanceModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="DueMaintenanceContent">

            </div>
        </div>
    </div>


    <!-- Modal for Completed Expence -->
    <div class="modal fade" id="CompletedExpenceModal" tabindex="-1" role="dialog" aria-labelledby="CompletedExpenceModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="CompletedExpenceContent">

            </div>
        </div>
    </div>

    <!-- Modal for Pending Expence -->
    <div class="modal fade" id="PendingExpenceModal" tabindex="-1" role="dialog" aria-labelledby="PendingExpenceModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="PendingExpenceContent">

            </div>
        </div>
    </div>

    <!-- Modal for Expence -->
    <div class="modal fade" id="ExpenceModal" tabindex="-1" role="dialog" aria-labelledby="ExpenceModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="ExpenceContent">

            </div>
        </div>
    </div>

    <!-- Modal for OccupiedVisitors -->
    <div class="modal fade" id="occupiedModal" tabindex="-1" role="dialog" aria-labelledby="occupiedModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="occupiedVisitorListContainer">

            </div>
        </div>
    </div>


    <!-- Modal for Unoccupied -->
    <div class="modal fade" id="unoccupiedModal" tabindex="-1" role="dialog" aria-labelledby="unoccupiedModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="unoccupiedVisitorListContainer">

            </div>
        </div>
    </div>


    <!-- Modal for Guest -->
    <div class="modal fade" id="guestVisitorModal" tabindex="-1" role="dialog" aria-labelledby="guestVisitorModalLabel" aria-hidden="true">
        <div class="modal-dialog custom-modal-lgSB" role="document">
            <div class="modal-content" id="guestVisitorListContainer">


            </div>
        </div>
    </div>

    <!-- Modal for Delivery -->
    <div class="modal fade" id="DeliveryVisitorModal" tabindex="-1" role="dialog" aria-labelledby="DeliveryVisitorModalLabel" aria-hidden="true">
        <div class="modal-dialog custom-modal-lgSB" role="document">
            <div class="modal-content" id="DeliveryVisitorListContainer">


            </div>
        </div>
    </div>

    <!-- Modal for Vendor -->
    <div class="modal fade" id="VendorVisitorModal" tabindex="-1" role="dialog" aria-labelledby="VendorVisitorModalLabel" aria-hidden="true">
        <div class="modal-dialog custom-modal-lgSB" role="document">
            <div class="modal-content" id="VendorVisitorListContainer">


            </div>
        </div>
    </div>

    <!-- Modal for Service -->
    <div class="modal fade" id="ServiceVisitorModal" tabindex="-1" role="dialog" aria-labelledby="ServiceVisitorModalLabel" aria-hidden="true">
        <div class="modal-dialog custom-modal-lgSB" role="document">
            <div class="modal-content" id="ServiceVisitorListContainer">


            </div>
        </div>
    </div>


    <!-- Modal for Worker -->
    <div class="modal fade" id="WorkerVisitorModal" tabindex="-1" role="dialog" aria-labelledby="WorkerVisitorModalLabel" aria-hidden="true">
        <div class="modal-dialog custom-modal-lgSB" role="document">
            <div class="modal-content" id="WorkerVisitorListContainer">

            </div>
        </div>
    </div>


    <!-- Modal for Present -->
    <div class="modal fade" id="PresentModal" tabindex="-1" role="dialog" aria-labelledby="PresentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="PresentListContainer">

            </div>
        </div>
    </div>

    <!-- Modal for Absent -->
    <div class="modal fade" id="AbsentModal" tabindex="-1" role="dialog" aria-labelledby="AbsentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="AbsentListContainer">

            </div>
        </div>
    </div>

    <!-- Modal for InProgress -->
    <div class="modal fade" id="InProgressModal" tabindex="-1" role="dialog" aria-labelledby="InProgressModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="InProgressListContainer">

            </div>
        </div>
    </div>


    <!-- Modal for Pending -->
    <div class="modal fade" id="PendingModal" tabindex="-1" role="dialog" aria-labelledby="PendingModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="PendingListContainer">

            </div>
        </div>
    </div>


    <!-- Modal for Escalate -->
    <div class="modal fade" id="EscalateModal" tabindex="-1" role="dialog" aria-labelledby="EscalateModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="EscalateListContainer">

            </div>
        </div>
    </div>

    <!-- Modal for Solved -->
    <div class="modal fade" id="SolvedModal" tabindex="-1" role="dialog" aria-labelledby="SolvedModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content" id="SolvedListContainer">

            </div>
        </div>
    </div>


    <!---------///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////-->


    <script>

        
        let selectedStartDate = moment().format('YYYY-MM-DD');
        let selectedEndDate = moment().format('YYYY-MM-DD');
        let timePeriod = null;

        $(function () {
         
            $('#daterangeInputSB').daterangepicker({
                autoUpdateInput: false,
                showDropdowns: true,
                autoApply: true,
                startDate: selectedStartDate,
                endDate: selectedEndDate,
                locale: {
                    format: 'YYYY-MM-DD',
                    cancelLabel: 'Clear'
                },
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment()],
                    'Last Month': [
                        moment().subtract(1, 'month').startOf('month'),
                        moment().subtract(1, 'month').endOf('month')
                    ]
                }
            });

            $('#daterangeInputSB').val(selectedStartDate + ' to ' + selectedEndDate);

            updateAllDashboredSB(selectedStartDate, selectedEndDate, 'Today');

            $('#daterangeInputSB').on('apply.daterangepicker', function (ev, picker) {
                selectedStartDate = picker.startDate.format('YYYY-MM-DD');
                selectedEndDate = picker.endDate.format('YYYY-MM-DD');

                $('#selectedDateTextSB').text(selectedStartDate + ' To ' + selectedEndDate);

                $('#daterangeInputSB').val(selectedStartDate + ' to ' + selectedEndDate); 

               
                let periodLabel = 'Custom Range';
                const ranges = picker.ranges;
                for (const [label, range] of Object.entries(ranges)) {
                    if (picker.startDate.isSame(range[0], 'day') &&
                        picker.endDate.isSame(range[1], 'day')) {
                        periodLabel = label;
                        break;
                    }
                }

                updateAllDashboredSB(selectedStartDate, selectedEndDate, periodLabel);

            });

            $('#daterangeInputSB').on('cancel.daterangepicker', function () {
                $(this).val('');
                selectedStartDate = null;
                selectedEndDate = null;
            });
        });

        document.getElementById("filterToggleBtnSB").addEventListener("click", function () {
            const datePanel = document.getElementById("customDateRangeSB");

            if (datePanel.style.display === "none" || datePanel.style.display === "") {
                
                datePanel.style.display = "block";
                $('#daterangeInputSB').trigger("click");
            } else {
               
                datePanel.style.display = "none";
            }
        });

        const quickFilters = {
            "TodayClickSB": "Today",
            "YesterdayClickSB": "Yesterday",
            "Last7DaysClickSB": "Last 7 Days",
            "Last30DaysClickSB": "Last 30 Days",
            "ThisMonthClickSB": "This Month",
            "LastMonthClickSB": "Last Month"
        };

        Object.entries(quickFilters).forEach(([id, label]) => {
            const btn = document.getElementById(id);
            if (btn) {
                btn.addEventListener("click", function () {
                    document.getElementById("customDateRangeSB").style.display = "none";
                    const range = $('#daterangeInputSB').data('daterangepicker').ranges[label];
                    if (range) {
                        selectedStartDate = range[0].format('YYYY-MM-DD');
                        selectedEndDate = range[1].format('YYYY-MM-DD');

                        $('#selectedDateTextSB').text(selectedStartDate + ' To ' + selectedEndDate);
                        $('#daterangeInputSB').val(selectedStartDate + ' to ' + selectedEndDate);

                        updateAllDashboredSB(selectedStartDate, selectedEndDate, label);
                    }
                });
            }
        });


        $('#daterangeInputSB').on('cancel.daterangepicker', function () {
            $('#selectedDateTextSB').text('Select Date Range');
        });

             function formatDateSB(dateString) {
                 const date = new Date(dateString);
                 const year = date.getFullYear();
                 const month = ('0' + (date.getMonth() + 1)).slice(-2);
                 const day = ('0' + date.getDate()).slice(-2);
                 return `${year}-${month}-${day}`;
             }

            const startDateInput = selectedStartDate;
            const endDateInput = selectedEndDate;


        $(document).ready(function () {
           
            const today = moment().format('YYYY-MM-DD');
            const firstDayOfMonth = moment().format('YYYY-MM-DD');


            selectedStartDate = firstDayOfMonth;
            selectedEndDate = today;


            let Totalstring = 'Today';
            refreshDashboardDataSB(firstDayOfMonth, today, Totalstring);
            refreshTodaysDataSB(today, today, Totalstring);


            loadMeetingsSB(today);
            loadEventsSB(today);
        });


        function updateAllDashboredSB(startDate, endDate, labelString) {
           

            if (startDate && endDate) {
                if (new Date(startDate) > new Date(endDate)) {
                    toastr.error('Start Date should not be greater than End Date');
                    return;
                }

                refreshDashboardDataSB(startDate, endDate, labelString);
                refreshTodaysDataSB(startDate, endDate, labelString)

                selectedStartDate = startDate;
                selectedEndDate = endDate;

            }
        }


            function updateDashboardCardsSB(data, btnClickString) {

                debugger
                 // -------- Maintenance Card --------
                 if (!data.HasMaintenanceData) {
                     $('#totalMaintenanceValue').text('₹0.00');
                     $('#collectedMaintenanceValue').text('₹0.00');
                     $('#dueMaintenanceValue').text('₹0.00');

                     $('#collectedMaintenanceBar').css('width', '0%', 'background-color', 'transparent').attr('title', '0% Received');
                     $('#DueMaintenanceBar').css('width', '0%', 'background-color', 'transparent').attr('title', '0% Pending');
                 } else {
                     $('#totalMaintenanceValue').text('₹' + data.TotalMaintenance);
                     $('#collectedMaintenanceValue').text('₹' + data.CollectedMaintenance);
                     $('#dueMaintenanceValue').text('₹' + data.DueMaintenance);

                     $('#collectedMaintenanceBar').css('width', data.CollectedPercentage + '%')
                         .attr('title', data.CollectedPercentage + '% Received');
                     $('#DueMaintenanceBar').css('width', data.DuePercentage + '%')
                         .attr('title', data.DuePercentage + '% Pending');
                 }

                 // -------- Expense Card --------
                 if (!data.HasExpenseData) {
                     $('#totalExpenceValue').text('₹0.00');
                     $('#CompleletdExpenceValue').text('₹0.00');
                     $('#PendingExpenceValue').text('₹0.00');

                     $('#CompletedExpenceBar').css('width', '0%', 'background-color', 'transparent').attr('title', '0% Cleared');
                     $('#PendingExpenceBar').css('width', '0%', 'background-color', 'transparent').attr('title', '0% Outstanding');
                 } else {
                     $('#totalExpenceValue').text('₹' + data.TotalExpence);
                     $('#CompleletdExpenceValue').text('₹' + data.ExpenceAmount);
                     $('#PendingExpenceValue').text('₹' + data.PendingExpenceAmount);

                     $('#CompletedExpenceBar').css('width', data.ExpencePercentage + '%')
                         .attr('title', data.ExpencePercentage + '% Cleared');
                     $('#PendingExpenceBar').css('width', data.PendingExpencePercentage + '%')
                         .attr('title', data.PendingExpencePercentage + '% Outstanding');
                 }

                 
                 $('#guestCount').text(data.Guest);
                 $('#deliveryCount').text(data.Delivery);
                 $('#vendorCount').text(data.Vendor);
                 $('#ServiceCount').text(data.Service);
                 $('#workerCount').text(data.Worker);

                 $('.card h4').text(btnClickString + " Visitors")

            }

            function refreshDashboardDataSB(startDate, endDate, btnClickString) {
                debugger
                     $.ajax({
                         url: '@Url.Action("GetDashboardDataSB", "Secretary")',
                         type: 'GET',
                         data: {
                             startDate: formatDateSB(startDate),
                             endDate: formatDateSB(endDate),
                             btnClickString: btnClickString
                         },
                         success: function (data) {
                             updateDashboardCardsSB(data, btnClickString);
                         }
                     });

            }

             function refreshTodaysDataSB(startDate, endDate, btnClickString) {

                  $.ajax({
                      url: '@Url.Action("GetVisitorParkingChartDataSB", "Secretary")',
                      type: 'GET',
                      data: {
                          startDate: formatDateSB(startDate) ,
                          endDate: formatDateSB(endDate),
                          timePeriod: btnClickString
                      },
                      success: function (data) {
                          const occupied = data.OccupiedSlots;
                          const unoccupied = data.UnoccupiedSlots;
                          const totalSlots = data.TotalVisitorSlots;

                          Highcharts.chart('parkingChart', {
                              chart: {
                                  type: 'pie'},
                              credits: {
                                  enabled: false
                              },
                              title: {
                                  text: `${btnClickString} Visitor Parking`
                              },
                              subtitle: {
                                  text: `Total Slots: ${totalSlots}`,
                                  align: 'right',
                                  verticalAlign: 'top',
                                  y: 50,
                                  style: {
                                      fontSize: '14px',
                                      color: '#666'
                                  }
                              },
                              tooltip: {
                                  pointFormat: '<b>{point.y} slots</b>'
                              },
                              plotOptions: {
                                  pie: {
                                      allowPointSelect: true,
                                      cursor: 'pointer',
                                      depth: 50,
                                      dataLabels: {
                                          enabled: true,
                                          format: '<b>{point.name}</b>: {point.y} slots'
                                      },
                                      point: {
                                          events: {
                                              click: function () {
                                                  if (this.name === 'Occupied') {
                                                      $.ajax({
                                                          url: '@Url.Action("GetOccupiedVisitorListSB", "Secretary")',
                                                          type: 'GET',
                                                          data: {
                                                              startDate: formatDateSB(startDate),
                                                              endDate: formatDateSB(endDate),
                                                              timePeriod: btnClickString
                                                          },
                                                          success: function (result) {
                                                              $('#occupiedVisitorListContainer').html(result);
                                                              $('#occupiedModal').modal('show');

                                                              var table = js('#occupiedVisitors').DataTable({
                                                                  "paging": true,
                                                                  "ordering": true,
                                                                  "info": true,
                                                                  "pageLength": 10,
                                                                  "searching": true,
                                                                  "destroy": true,
                                                                  dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                                                  buttons: [
                                                                      {
                                                                          extend: 'csvHtml5',
                                                                          text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                                                          titleAttr: 'CSV',
                                                                          exportOptions: {
                                                                              modifier: {
                                                                                  selected: true
                                                                              }
                                                                          },
                                                                          action: exportIfSelected('csvHtml5')

                                                                      },
                                                                      {
                                                                          extend: 'excelHtml5',
                                                                          text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                                                          titleAttr: 'Excel',
                                                                          exportOptions: {
                                                                              modifier: {
                                                                                  selected: true
                                                                              }
                                                                          },
                                                                          action: exportIfSelected('excelHtml5')
                                                                      },
                                                                      {
                                                                          extend: 'pdfHtml5',
                                                                          text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                                                          title: 'Complaint List',
                                                                          orientation: 'landscape',
                                                                          exportOptions: {
                                                                              modifier: {
                                                                                  selected: true
                                                                              }
                                                                          },
                                                                          action: exportIfSelected('pdfHtml5')
                                                                      },
                                                                      {
                                                                          extend: 'print',
                                                                          text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                                                          titleAttr: 'Print',
                                                                          exportOptions: {
                                                                              modifier: {
                                                                                  selected: true
                                                                              }
                                                                          },
                                                                          action: exportIfSelected('print')
                                                                      }
                                                                  ]


                                                              });

                                                              // Handle "Select All" checkbox
                                                              $('#checkbox-all').on('click', function () {
                                                                  var isChecked = $(this).prop('checked');

                                                                  // Get all rows (including those not currently visible)
                                                                  table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                                                  // Select or Deselect rows in DataTable
                                                                  if (isChecked) {
                                                                      table.rows().select();
                                                                  } else {
                                                                      table.rows().deselect();
                                                                  }

                                                                  // Update the custom checkbox styling
                                                                  table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                                              });

                                                              // Handle individual row checkboxes
                                                              $('#occupiedVisitors').on('change', '.row-checkbox', function () {
                                                                  var row = js(this).closest('tr');
                                                                  var table = js('#occupiedVisitors').DataTable();
                                                                  var isChecked = js(this).prop('checked');

                                                                  if (isChecked) {
                                                                      table.row(row).select();


                                                                  } else {
                                                                      table.row(row).deselect();

                                                                  }

                                                                  // Master checkbox state update
                                                                  var total = table.rows().count();
                                                                  var checked = table.rows({ selected: true }).count();
                                                                  js('#checkbox-all').prop('checked', total === checked);

                                                              });

                                                          },
                                                          error: function () {
                                                              alert('Failed to load data.');
                                                          }

                                                      });
                                                  } else if (this.name === 'Unoccupied') {
                                                      $.ajax({
                                                          url: '@Url.Action("GetUnoccupiedSlotListSB", "Secretary")',
                                                          type: 'GET',
                                                          data: {
                                                              startDate: formatDateSB(startDate),
                                                              endDate: formatDateSB(endDate),
                                                              timePeriod: btnClickString
                                                          },
                                                          success: function (result) {
                                                              $('#unoccupiedVisitorListContainer').html(result);
                                                              $('#unoccupiedModal').modal('show');

                                                              var table =  js('#UnoccupiedVisitors').DataTable({
                                                                  "paging": true,
                                                                  "ordering": true,
                                                                  "info": true,
                                                                  "pageLength": 10,
                                                                  "searching": true,
                                                                  "destroy": true,
                                                                  dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                                                  buttons: [
                                                                      {
                                                                          extend: 'csvHtml5',
                                                                          text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                                                          titleAttr: 'CSV',
                                                                          exportOptions: {
                                                                              modifier: {
                                                                                  selected: true
                                                                              }
                                                                          },
                                                                          action: exportIfSelected('csvHtml5')

                                                                      },
                                                                      {
                                                                          extend: 'excelHtml5',
                                                                          text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                                                          titleAttr: 'Excel',
                                                                          exportOptions: {
                                                                              modifier: {
                                                                                  selected: true
                                                                              }
                                                                          },
                                                                          action: exportIfSelected('excelHtml5')
                                                                      },
                                                                      {
                                                                          extend: 'pdfHtml5',
                                                                          text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                                                          title: 'Complaint List',
                                                                          orientation: 'landscape',
                                                                          exportOptions: {
                                                                              modifier: {
                                                                                  selected: true
                                                                              }
                                                                          },
                                                                          action: exportIfSelected('pdfHtml5')
                                                                      },
                                                                      {
                                                                          extend: 'print',
                                                                          text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                                                          titleAttr: 'Print',
                                                                          exportOptions: {
                                                                              modifier: {
                                                                                  selected: true
                                                                              }
                                                                          },
                                                                          action: exportIfSelected('print')
                                                                      }
                                                                  ]


                                                              });

                                                              
                                                              $('#checkbox-all').on('click', function () {
                                                                  var isChecked = $(this).prop('checked');

                                                                  table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                                                  if (isChecked) {
                                                                      table.rows().select();
                                                                  } else {
                                                                      table.rows().deselect();
                                                                  }

                                                                  table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                                              });

                                                              $('#UnoccupiedVisitors').on('change', '.row-checkbox', function () {
                                                                  var row = js(this).closest('tr');
                                                                  var table = js('#UnoccupiedVisitors').DataTable();
                                                                  var isChecked = js(this).prop('checked');

                                                                  if (isChecked) {
                                                                      table.row(row).select();


                                                                  } else {
                                                                      table.row(row).deselect();

                                                                  }

                                                                  var total = table.rows().count();
                                                                  var checked = table.rows({ selected: true }).count();
                                                                  js('#checkbox-all').prop('checked', total === checked);

                                                              });

                                                          },
                                                          error: function () {
                                                              alert('Failed to load data.');
                                                          }

                                                      });
                                                  }
                                              }
                                          }
                                      }
                                  }
                              },
                              series: [{
                                  name: 'Slots',
                                  colorByPoint: true,
                                  data: [
                                      {
                                          name: 'Occupied',
                                          y: occupied,
                                          color: {
                                              linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },
                                              stops: [
                                                 
                                                  [1, '#fe5377']
                                              ]
                                          }
                                      },
                                      {
                                          name: 'Unoccupied',
                                          y: unoccupied,
                                          color: {
                                              linearGradient: { x1: 0, x2: 0, y1: 0, y2: 1 },
                                              stops: [
                                                  [0, '#b24775 ']
                                                 

                                              ]
                                          }
                                      }
                                  ]
                              }]
                          });
                      }
                  });


                 $.ajax({
                     url: '@Url.Action("TOP_5_ExpencectlrSBgraph", "Secretary")',
                     type: 'GET',
                     data: {
                         startDate: formatDateSB(startDate),
                         endDate: formatDateSB(endDate)
                     },
                     success: function (data) {

                         const gradientColors = [
                             ['#b24775','#ffb3a7'],   // light yellow to amber
                             ['#fe5377',' #ffd3a5'],   // light blue to blue
                             ['#ff8d73','#ff6f61 '],   // light green to green
                             ['#ffdf9a','#d36c97'],   // light red to red
                             ['#D1C4E9','#f9a1bc ']   // light violet to purple
                         ];

                         const expencChartData = data.map((item,index) => ({
                             name: item.ExpenceFor,
                             y: item.Amount,
                             expenceType: item.ExpenceType,
                             description: item.Description,
                             vendorName: item.VendorName,
                             color: {
                                 linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },
                                 stops: [
                                     [0, gradientColors[index % gradientColors.length][0]],
                                     [1, gradientColors[index % gradientColors.length][1]]
                                 ]
                             }
                         }));

                         Highcharts.chart('expenseChart', {
                             chart: { type: 'pie' },
                             credits: {
                                 enabled: false
                             },
                             title: { text: 'Top Expenses' },
                             tooltip: {
                                 headerFormat: '<span style="font-weight:bold;">{point.name}</span><br>',
                                 pointFormat: '<b>Type:</b> {point.expenceType} <br> <b>Description:</b> {point.description} <br> <b>VendorName:</b> {point.vendorName} <br> <b>Rs.{point.y}</b>'
                             },
                             plotOptions: {
                                 pie: {
                                     allowPointSelect: true,
                                     cursor: 'pointer',
                                     dataLabels: {
                                         enabled: true,
                                         format: '{point.name}<br>Rs.{point.y}'
                                     }
                                 }
                             },
                             series: [{
                                 name: 'Expense',
                                 data: expencChartData
                             }]
                         });

                     }
                 });


                 $.ajax({
                     url: '@Url.Action("TOP_5_UnpaidMaintenanceCtlSBgraph", "Secretary")',
                     type: 'GET',
                     data: {
                         startDate: formatDateSB(startDate),
                         endDate: formatDateSB(endDate)
                     },
                     success: function (data) {

                         const gradientColors = [
                             ['#FF9A8B', '#FF6A88'],  // Coral to Pink
                             ['#A1C4FD', '#C2E9FB'],  // Sky blue to light blue
                             ['#FBD786', '#f7797d'],  // Peach to Pink
                             ['#84FAB0', '#8FD3F4'],  // Greenish teal to light blue
                             ['#D6A4A4', '#DAE2F8']   // Dusty pink to pastel blue
                         ];

                         const maintenanceChartData = data.map((item, index) => ({
                             name: item.FullName,
                             y: item.Amount,
                             flat: item.Flat,
                             maintenceName: item.MaintenceName,
                             description: item.Description,
                             deadlineDate: formatJsonDate(item.DeadlineDate),
                             color: {
                                 linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },
                                 stops: [
                                     [0, gradientColors[index % gradientColors.length][0]],
                                     [1, gradientColors[index % gradientColors.length][1]]
                                 ]
                             }

                         }));

                         Highcharts.chart('maintenanceChart', {

                             chart: { type: 'pie' },
                             credits: {
                                 enabled: false
                             },
                             title: { text: 'Top Due Maintenance' },
                             tooltip: {
                                 headerFormat: '<span style="font-weight:bold;">{point.name}</span><br>',
                                 pointFormat: '<b>FlatNumber:</b> {point.flat} <br> <b>MaintenceName:</b> {point.maintenceName} <br> <b>Description:</b> {point.description} <br> <b>DeadlineDate:</b> {point.deadlineDate} <br> <b>Rs.{point.y}</b>'
                             },
                             plotOptions: {
                                 pie: {
                                     allowPointSelect: true,
                                     cursor: 'pointer',
                                     dataLabels: {
                                         enabled: true,
                                         format: '{point.name}<br>Rs.{point.y}'
                                     }
                                 }
                             },
                             series: [{
                                 name: 'Maintenance',
                                 data: maintenanceChartData
                             }]
                         });


                     }

                 });

                 //---------------------------------------------------------------------------------------------

                     $.ajax({
                         url: '@Url.Action("ResidantComplaintsChartDataSB", "Secretary")',
                         type: 'GET',
                         data: {
                             startDate: formatDateSB(startDate),
                             endDate: formatDateSB(endDate),
                             timePeriod: btnClickString
                         },
                         success: function (data) {

                             let categories = ['Pending', 'Inprogress', 'Solved', 'Escalate',];
                             let complaintCounts = [0, 0, 0, 0];

                             data.forEach(item => {
                                 if (item.Status === 'Pending') complaintCounts[0] = item.ComplaintCount;
                                 if (item.Status === 'Inprogress') complaintCounts[1] = item.ComplaintCount;
                                 if (item.Status === 'Solved') complaintCounts[2] = item.ComplaintCount;
                                 if (item.Status === 'Escalate') complaintCounts[3] = item.ComplaintCount;

                             });

                             Highcharts.chart('complaintsChart', {
                                 chart: { type: 'bar' },
                                 credits: {
                                     enabled: false
                                 },
                                 title: { text: `${btnClickString} Complaints` },
                                 xAxis: { categories: categories },
                                 yAxis: {
                                     min: 0,
                                     title: { text: 'Total Complaints' },
                                     stackLabels: { enabled: true }
                                 },
                                 legend: { reversed: true },
                                 plotOptions: {
                                     series: {
                                         stacking: 'normal',
                                         cursor: 'pointer',
                                         point: {
                                             events: {
                                                 click: function () {
                                                     let statusClicked = this.category;
                                                     openComplaintPopup(statusClicked); // call popup function Like status Present and absent
                                                 }
                                             }
                                         }
                                     }
                                 },
                                 series: [{
                                     name: `${btnClickString} Complaints`,
                                     data: [
                                         {
                                             y: complaintCounts[0], // Pending
                                             color: {
                                                 linearGradient: { x1: 0, y1: 0, x2: 1, y2: 0 },
                                                 stops: [
                                                     [0, '#FFE082'],  // light yellow
                                                     [1, '#FFC300']   // dark yellow
                                                 ]
                                             }
                                         },
                                         {
                                             y: complaintCounts[1], // Inprogress
                                             color: {
                                                 linearGradient: { x1: 0, y1: 0, x2: 1, y2: 0 },
                                                 stops: [
                                                     [0, '#81D4FA'],  // light blue
                                                     [1, '#17A2B8']   // original
                                                 ]
                                             }
                                         },
                                         {
                                             y: complaintCounts[2], // Solved
                                             color: {
                                                 linearGradient: { x1: 0, y1: 0, x2: 1, y2: 0 },
                                                 stops: [
                                                     [0, '#A5D6A7'],  // light green
                                                     [1, '#28A745']   // original
                                                 ]
                                             }
                                         },
                                         {
                                             y: complaintCounts[3], // Escalate
                                             color: {
                                                 linearGradient: { x1: 0, y1: 0, x2: 1, y2: 0 },
                                                 stops: [
                                                     [0, '#FF8A80'],  // light red
                                                     [1, '#C70039']   // original
                                                 ]
                                             }
                                         }
                                     ]

                                 }]
                             });
                         },
                         error: function () {
                             alert("Failed to load complaint chart data.");
                         }
                     });


                 function openComplaintPopup(status) {
                     $.ajax({
                         url: '@Url.Action("GetComplaintsByStatusSB", "Secretary")',
                         type: 'GET',
                         data: {
                             status: status,
                             startDate: formatDateSB(startDate),
                             endDate: formatDateSB(endDate),
                             timePeriod: btnClickString
                         },
                         dataType: 'html',
                         success: function (response) {
                             if (status === "Inprogress") {
                                 $("#InProgressListContainer").html(response);
                                 $("#InProgressModal").modal("show");

                                 var table = js('#InProgressComplaintTable').DataTable({
                                     "paging": true,
                                     "ordering": true,
                                     "info": true,
                                     "pageLength": 10,
                                     "searching": true,
                                     "destroy": true,
                                     dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                     buttons: [
                                         {
                                             extend: 'csvHtml5',
                                             text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                             titleAttr: 'CSV',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('csvHtml5')

                                         },
                                         {
                                             extend: 'excelHtml5',
                                             text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                             titleAttr: 'Excel',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('excelHtml5')
                                         },
                                         {
                                             extend: 'pdfHtml5',
                                             text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                             title: 'Complaint List',
                                             orientation: 'landscape',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('pdfHtml5')
                                         },
                                         {
                                             extend: 'print',
                                             text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                             titleAttr: 'Print',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('print')
                                         }
                                     ]
                                 });

                                
                                 $('#checkbox-all').on('click', function () {
                                     var isChecked = $(this).prop('checked');

                                     table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                     if (isChecked) {
                                         table.rows().select();
                                     } else {
                                         table.rows().deselect();
                                     }

                                     table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                 });

                                 $('#InProgressComplaintTable').on('change', '.row-checkbox', function () {
                                     var row = js(this).closest('tr');
                                     var table = js('#InProgressComplaintTable').DataTable();
                                     var isChecked = js(this).prop('checked');

                                     if (isChecked) {
                                         table.row(row).select();


                                     } else {
                                         table.row(row).deselect();

                                     }

                                     var total = table.rows().count();
                                     var checked = table.rows({ selected: true }).count();
                                     js('#checkbox-all').prop('checked', total === checked);

                                 });

                             } else if (status === "Pending") {
                                 $("#PendingListContainer").html(response);
                                 $("#PendingModal").modal("show");

                                 var table = js('#PendingComplaintTable').DataTable({
                                     "paging": true,
                                     "ordering": true,
                                     "info": true,
                                     "pageLength": 10,
                                     "searching": true,
                                     "destroy": true,
                                     dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                     buttons: [
                                         {
                                             extend: 'csvHtml5',
                                             text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                             titleAttr: 'CSV',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('csvHtml5')

                                         },
                                         {
                                             extend: 'excelHtml5',
                                             text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                             titleAttr: 'Excel',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('excelHtml5')
                                         },
                                         {
                                             extend: 'pdfHtml5',
                                             text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                             title: 'Complaint List',
                                             orientation: 'landscape',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('pdfHtml5')
                                         },
                                         {
                                             extend: 'print',
                                             text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                             titleAttr: 'Print',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('print')
                                         }
                                     ]
                                 });

                                 $('#checkbox-all').on('click', function () {
                                     var isChecked = $(this).prop('checked');

                                     table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                     if (isChecked) {
                                         table.rows().select();
                                     } else {
                                         table.rows().deselect();
                                     }

                                     table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                 });

                                 $('#PendingComplaintTable').on('change', '.row-checkbox', function () {
                                     var row = js(this).closest('tr');
                                     var table = js('#PendingComplaintTable').DataTable();
                                     var isChecked = js(this).prop('checked');

                                     if (isChecked) {
                                         table.row(row).select();

                                     } else {
                                         table.row(row).deselect();
                                     }

                                     var total = table.rows().count();
                                     var checked = table.rows({ selected: true }).count();
                                     js('#checkbox-all').prop('checked', total === checked);

                                 });



                             } else if (status === "Escalate") {
                                 $("#EscalateListContainer").html(response);
                                 $("#EscalateModal").modal("show");

                                 var table = js('#EscalateComplaintTable').DataTable({
                                     "paging": true,
                                     "ordering": true,
                                     "info": true,
                                     "pageLength": 10,
                                     "searching": true,
                                     "destroy": true,
                                     dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                     buttons: [
                                         {
                                             extend: 'csvHtml5',
                                             text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                             titleAttr: 'CSV',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('csvHtml5')

                                         },
                                         {
                                             extend: 'excelHtml5',
                                             text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                             titleAttr: 'Excel',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('excelHtml5')
                                         },
                                         {
                                             extend: 'pdfHtml5',
                                             text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                             title: 'Complaint List',
                                             orientation: 'landscape',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('pdfHtml5')
                                         },
                                         {
                                             extend: 'print',
                                             text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                             titleAttr: 'Print',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('print')
                                         }
                                     ]
                                 });

                                 $('#checkbox-all').on('click', function () {
                                     var isChecked = $(this).prop('checked');

                                     table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                     if (isChecked) {
                                         table.rows().select();
                                     } else {
                                         table.rows().deselect();
                                     }

                                     table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                 });


                                 $('#EscalateComplaintTable').on('change', '.row-checkbox', function () {
                                     var row = js(this).closest('tr');
                                     var table = js('#EscalateComplaintTable').DataTable();
                                     var isChecked = js(this).prop('checked');

                                     if (isChecked) {
                                         table.row(row).select();


                                     } else {
                                         table.row(row).deselect();

                                     }

                                     var total = table.rows().count();
                                     var checked = table.rows({ selected: true }).count();
                                     js('#checkbox-all').prop('checked', total === checked);

                                 });


                             } else if (status === "Solved") {
                                 $("#SolvedListContainer").html(response);
                                 $("#SolvedModal").modal("show");

                                 var table = js('#SolvedComplaintTable').DataTable({
                                     "paging": true,
                                     "ordering": true,
                                     "info": true,
                                     "pageLength": 10,
                                     "searching": true,
                                     "destroy": true,
                                     dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                     buttons: [
                                         {
                                             extend: 'csvHtml5',
                                             text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                             titleAttr: 'CSV',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('csvHtml5')

                                         },
                                         {
                                             extend: 'excelHtml5',
                                             text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                             titleAttr: 'Excel',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('excelHtml5')
                                         },
                                         {
                                             extend: 'pdfHtml5',
                                             text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                             title: 'Complaint List',
                                             orientation: 'landscape',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('pdfHtml5')
                                         },
                                         {
                                             extend: 'print',
                                             text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                             titleAttr: 'Print',
                                             exportOptions: {
                                                 modifier: {
                                                     selected: true
                                                 }
                                             },
                                             action: exportIfSelected('print')
                                         }
                                     ]
                                 });
                                 
                                 $('#checkbox-all').on('click', function () {
                                     var isChecked = $(this).prop('checked');

                                     table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                     if (isChecked) {
                                         table.rows().select();
                                     } else {
                                         table.rows().deselect();
                                     }

                                     table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                 });

                                 $('#SolvedComplaintTable').on('change', '.row-checkbox', function () {
                                     var row = js(this).closest('tr');
                                     var table = js('#SolvedComplaintTable').DataTable();
                                     var isChecked = js(this).prop('checked');

                                     if (isChecked) {
                                         table.row(row).select();


                                     } else {
                                         table.row(row).deselect();

                                     }

                                     var total = table.rows().count();
                                     var checked = table.rows({ selected: true }).count();
                                     js('#checkbox-all').prop('checked', total === checked);

                                 });

                             }
                         },
                         error: function () {
                             alert("Failed to load complaint list for " + status);
                         }
                     });
                 }


                 //------------------------------------------------------------------------------------

                 $.ajax({

                     url: '@Url.Action("WorkerAttendanceChartDataSB", "Secretary")',
                     type: 'GET',
                     data: {
                         startDate: formatDateSB(startDate),
                         endDate: formatDateSB(endDate),
                         timePeriod: btnClickString
                     },
                     success: function (data) {
                         
                         if (data && data.length > 0) {

                            
                             if (btnClickString === 'Today' || btnClickString === 'Yesterday') {
                                 const Total = data[0].TotalWorkers;
                                 const Present = data[0].PresentCount;
                                 const Absent = data[0].AbsentCount;

                                 Highcharts.chart('attendanceVariablePie', {
                                     chart: {
                                         type: 'variablepie'
                                     },
                                     credits: {
                                         enabled: false
                                     },
                                     title: {
                                         text: `${btnClickString} Worker Attendance`
                                     },
                                     subtitle: {
                                         text: `Total Worker: ${Total}`,
                                         align: 'right',
                                         verticalAlign: 'top',
                                         y: 50,
                                         style: {
                                             fontSize: '14px',
                                             color: '#666'
                                         }
                                     },
                                     tooltip: {
                                         pointFormat: '<b>{point.y}</b> workers'
                                     },
                                     plotOptions: {
                                         series: {
                                             cursor: 'pointer',
                                             point: {
                                                 events: {
                                                     click: function () {
                                                         const category = this.name; // 'Present' or 'Absent'

                                                         if (category === 'Present') {
                                                             $.ajax({
                                                                 url: '@Url.Action("GetPresentWorkerListSB", "Secretary")',
                                                                 type: 'GET',
                                                                 data: {
                                                                     startDate: formatDateSB(startDate),
                                                                     endDate: formatDateSB(endDate),
                                                                     timePeriod: btnClickString
                                                                 },
                                                                 success: function (result) {
                                                                     $('#PresentListContainer').html(result);
                                                                     $('#PresentModal').modal('show');

                                                                     var table = js('#PresentWorkers').DataTable({
                                                                         paging: true,
                                                                         ordering: true,
                                                                         info: true,
                                                                         pageLength: 10,
                                                                         searching: true,
                                                                         "destroy": true,
                                                                         dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                                                         buttons: [
                                                                             {
                                                                                 extend: 'csvHtml5',
                                                                                 text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                                                                 titleAttr: 'CSV',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('csvHtml5')

                                                                             },
                                                                             {
                                                                                 extend: 'excelHtml5',
                                                                                 text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                                                                 titleAttr: 'Excel',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('excelHtml5')
                                                                             },
                                                                             {
                                                                                 extend: 'pdfHtml5',
                                                                                 text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                                                                 title: 'Complaint List',
                                                                                 orientation: 'landscape',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('pdfHtml5')
                                                                             },
                                                                             {
                                                                                 extend: 'print',
                                                                                 text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                                                                 titleAttr: 'Print',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('print')
                                                                             }
                                                                         ]
                                                                     });

                                                                     $('#checkbox-all').on('click', function () {
                                                                         var isChecked = $(this).prop('checked');

                                                                         table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                                                         if (isChecked) {
                                                                             table.rows().select();
                                                                         } else {
                                                                             table.rows().deselect();
                                                                         }

                                                                         table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                                                     });

                                                                     $('#PresentWorkers').on('change', '.row-checkbox', function () {
                                                                         var row = js(this).closest('tr');
                                                                         var table = js('#PresentWorkers').DataTable();
                                                                         var isChecked = js(this).prop('checked');

                                                                         if (isChecked) {
                                                                             table.row(row).select();


                                                                         } else {
                                                                             table.row(row).deselect();

                                                                         }

                                                                         var total = table.rows().count();
                                                                         var checked = table.rows({ selected: true }).count();
                                                                         js('#checkbox-all').prop('checked', total === checked);

                                                                     });

                                                                 },
                                                                 error: function () {
                                                                     alert('Failed to load Present workers list.');
                                                                 }
                                                             });
                                                         } else if (category === 'Absent') {
                                                             $.ajax({
                                                                 url: '@Url.Action("GetAbsentWorkerListSB", "Secretary")',
                                                                 type: 'GET',
                                                                 data: {
                                                                     startDate: formatDateSB(startDate),
                                                                     endDate: formatDateSB(endDate),
                                                                     timePeriod: btnClickString
                                                                 },
                                                                 success: function (result) {
                                                                     $('#AbsentListContainer').html(result);
                                                                     $('#AbsentModal').modal('show');

                                                                    var table =  js('#AbsentWorkers').DataTable({
                                                                         paging: true,
                                                                         ordering: true,
                                                                         info: true,
                                                                         pageLength: 10,
                                                                         searching: true,
                                                                         "destroy": true,
                                                                         dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                                                         buttons: [
                                                                             {
                                                                                 extend: 'csvHtml5',
                                                                                 text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                                                                 titleAttr: 'CSV',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('csvHtml5')

                                                                             },
                                                                             {
                                                                                 extend: 'excelHtml5',
                                                                                 text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                                                                 titleAttr: 'Excel',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('excelHtml5')
                                                                             },
                                                                             {
                                                                                 extend: 'pdfHtml5',
                                                                                 text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                                                                 title: 'Complaint List',
                                                                                 orientation: 'landscape',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('pdfHtml5')
                                                                             },
                                                                             {
                                                                                 extend: 'print',
                                                                                 text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                                                                 titleAttr: 'Print',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('print')
                                                                             }
                                                                         ]
                                                                     });

                                                                     $('#checkbox-all').on('click', function () {
                                                                         var isChecked = $(this).prop('checked');

                                                                         table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                                                         if (isChecked) {
                                                                             table.rows().select();
                                                                         } else {
                                                                             table.rows().deselect();
                                                                         }

                                                                         table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                                                     });

                                                                     $('#AbsentWorkers').on('change', '.row-checkbox', function () {
                                                                         var row = js(this).closest('tr');
                                                                         var table = js('#AbsentWorkers').DataTable();
                                                                         var isChecked = js(this).prop('checked');

                                                                         if (isChecked) {
                                                                             table.row(row).select();


                                                                         } else {
                                                                             table.row(row).deselect();

                                                                         }

                                                                         var total = table.rows().count();
                                                                         var checked = table.rows({ selected: true }).count();
                                                                         js('#checkbox-all').prop('checked', total === checked);

                                                                     });
                                                                 },
                                                                 error: function () {
                                                                     alert('Failed to load Absent workers list.');
                                                                 }
                                                             });
                                                         }
                                                     }
                                                 }
                                             }
                                         }
                                     },
                                     series: [{
                                         minPointSize: 10,
                                         innerSize: '40%',
                                         zMin: 0,
                                         name: `${btnClickString} Attendance`,
                                         dataLabels: {
                                             enabled: true,
                                             format: '{point.name}: {point.y}',
                                             style: {
                                                 fontSize: '14px',
                                                 fontWeight: 'bold'
                                             }
                                         },
                                         data: [
                                             {
                                                 name: 'Present',
                                                 y: Present,
                                                 z: Present,
                                                 color: {
                                                     linearGradient: { x1: 0, y1: 0, x2: 1, y2: 0 },
                                                     stops: [
                                                         [0, '#81C784'], // light green
                                                         [1, '#4CAF50']  // original green
                                                     ]
                                                 }
                                             },
                                             {
                                                 name: 'Absent',
                                                 y: Absent,
                                                 z: Absent,
                                                 color: {
                                                     linearGradient: { x1: 0, y1: 0, x2: 1, y2: 0 },
                                                     stops: [
                                                         [0, '#EF9A9A'], // light red
                                                         [1, '#F44336']  // original red
                                                     ]
                                                 }
                                             }
                                         ]
                                     }]
                                 });
                             } else {

                                 const categories = data.map(item => item.Date);
                                 const Total = data[0].TotalWorkers;
                                 const presentData = data.map(item => item.Present);
                                 const absentData = data.map(item => item.Absent);

                                 Highcharts.chart('attendanceVariablePie', {
                                     chart: {
                                         type: 'column'
                                     },
                                     credits: {
                                         enabled: false
                                     },
                                     title: {
                                         text: `${btnClickString} Worker Attendance`
                                     },
                                     subtitle: {
                                         text: `Total Worker: ${Total}`,
                                         align: 'right',
                                         verticalAlign: 'top',
                                         y: 50,
                                         style: {
                                             fontSize: '14px',
                                             color: '#666'
                                         }
                                     },
                                     xAxis: {
                                         categories: categories,
                                         crosshair: true,
                                         title: { text: 'Date' }
                                     },
                                     yAxis: {
                                         min: 0,
                                         title: { text: 'Number of Workers' }
                                     },
                                     tooltip: {
                                         shared: true
                                     },
                                    plotOptions: {
                                         column: {
                                            grouping: false,
                                            shadow: false,
                                            borderWidth: 0,
                                             cursor: 'pointer',
                                             point: {
                                                 events: {
                                                     click: function () {

                                                         const dateClicked = this.category;
                                                         const category = this.series.name; // 'Present' or 'Absent'

                                                         if (category === 'Present') {
                                                             $.ajax({
                                                                 url: '@Url.Action("GetPresentWorkerListSB", "Secretary")',
                                                                 type: 'GET',
                                                                 data: {
                                                                     selectedDate: dateClicked,
                                                                     timePeriod: btnClickString
                                                                 },
                                                                 success: function (result) {
                                                                     $('#PresentListContainer').html(result);
                                                                     $('#PresentModal').modal('show');

                                                                    var table = js('#PresentWorkers').DataTable({
                                                                         paging: true,
                                                                         ordering: true,
                                                                         info: true,
                                                                         pageLength: 10,
                                                                         searching: true,
                                                                         "destroy": true,
                                                                         dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                                                         buttons: [
                                                                             {
                                                                                 extend: 'csvHtml5',
                                                                                 text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                                                                 titleAttr: 'CSV',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('csvHtml5')

                                                                             },
                                                                             {
                                                                                 extend: 'excelHtml5',
                                                                                 text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                                                                 titleAttr: 'Excel',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('excelHtml5')
                                                                             },
                                                                             {
                                                                                 extend: 'pdfHtml5',
                                                                                 text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                                                                 title: 'Complaint List',
                                                                                 orientation: 'landscape',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('pdfHtml5')
                                                                             },
                                                                             {
                                                                                 extend: 'print',
                                                                                 text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                                                                 titleAttr: 'Print',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('print')
                                                                             }
                                                                         ]
                                                                     });

                                                                     $('#checkbox-all').on('click', function () {
                                                                         var isChecked = $(this).prop('checked');

                                                                         table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                                                         if (isChecked) {
                                                                             table.rows().select();
                                                                         } else {
                                                                             table.rows().deselect();
                                                                         }

                                                                         table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                                                     });

                                                                     $('#PresentWorkers').on('change', '.row-checkbox', function () {
                                                                         var row = js(this).closest('tr');
                                                                         var table = js('#PresentWorkers').DataTable();
                                                                         var isChecked = js(this).prop('checked');

                                                                         if (isChecked) {
                                                                             table.row(row).select();


                                                                         } else {
                                                                             table.row(row).deselect();

                                                                         }

                                                                         var total = table.rows().count();
                                                                         var checked = table.rows({ selected: true }).count();
                                                                         js('#checkbox-all').prop('checked', total === checked);

                                                                     });
                                                                 },
                                                                 error: function () {
                                                                     alert('Failed to load Present workers list.');
                                                                 }
                                                             });
                                                         } else if (category === 'Absent') {
                                                             $.ajax({
                                                                 url: '@Url.Action("GetAbsentWorkerListSB", "Secretary")',
                                                                 type: 'GET',
                                                                 data: {
                                                                     selectedDate: dateClicked,
                                                                     timePeriod: btnClickString
                                                                 },
                                                                 success: function (result) {
                                                                     $('#AbsentListContainer').html(result);
                                                                     $('#AbsentModal').modal('show');

                                                                     var table = js('#AbsentWorkers').DataTable({
                                                                         paging: true,
                                                                         ordering: true,
                                                                         info: true,
                                                                         pageLength: 10,
                                                                         searching: true,
                                                                         "destroy": true,
                                                                         dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                                                         buttons: [
                                                                             {
                                                                                 extend: 'csvHtml5',
                                                                                 text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                                                                 titleAttr: 'CSV',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('csvHtml5')

                                                                             },
                                                                             {
                                                                                 extend: 'excelHtml5',
                                                                                 text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                                                                 titleAttr: 'Excel',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('excelHtml5')
                                                                             },
                                                                             {
                                                                                 extend: 'pdfHtml5',
                                                                                 text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                                                                 title: 'Complaint List',
                                                                                 orientation: 'landscape',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('pdfHtml5')
                                                                             },
                                                                             {
                                                                                 extend: 'print',
                                                                                 text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                                                                 titleAttr: 'Print',
                                                                                 exportOptions: {
                                                                                     modifier: {
                                                                                         selected: true
                                                                                     }
                                                                                 },
                                                                                 action: exportIfSelected('print')
                                                                             }
                                                                         ]
                                                                     });

                                                                     $('#checkbox-all').on('click', function () {
                                                                         var isChecked = $(this).prop('checked');

                                                                         table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                                                         if (isChecked) {
                                                                             table.rows().select();
                                                                         } else {
                                                                             table.rows().deselect();
                                                                         }

                                                                         table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                                                     });

                                                                     $('#AbsentWorkers').on('change', '.row-checkbox', function () {
                                                                         var row = js(this).closest('tr');
                                                                         var table = js('#AbsentWorkers').DataTable();
                                                                         var isChecked = js(this).prop('checked');

                                                                         if (isChecked) {
                                                                             table.row(row).select();


                                                                         } else {
                                                                             table.row(row).deselect();

                                                                         }

                                                                         var total = table.rows().count();
                                                                         var checked = table.rows({ selected: true }).count();
                                                                         js('#checkbox-all').prop('checked', total === checked);

                                                                     });
                                                                 },
                                                                 error: function () {
                                                                     alert('Failed to load Absent workers list.');
                                                                 }
                                                             });
                                                         }
                                                     }
                                                 }
                                             }
                                         }
                                    },
                                     series: [
                                         {
                                             name: 'Present',
                                             data: presentData.map(value => ({
                                                 y: value,
                                                 color: {
                                                     linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                                                     stops: [
                                                         [0, '#81C784'],  // light green
                                                         [1, '#4CAF50']   // dark green
                                                     ]
                                                 }
                                             })),
                                             pointPadding: 0.3,
                                             pointPlacement: -0.2
                                         },
                                         {
                                             name: 'Absent',
                                             data: absentData.map(value => ({
                                                 y: value,
                                                 color: {
                                                     linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },
                                                     stops: [
                                                         [0, '#EF9A9A'],  // light red
                                                         [1, '#F44336']   // dark red
                                                     ]
                                                 }
                                             })),
                                             pointPadding: 0.4,
                                             pointPlacement: -0.2
                                         }
                                     ]
                                 });
                             }
                         } else {
                             console.error("Data is empty or invalid:", data);
                         }
                     }
                 });


             }


             var js = jQuery.noConflict(true);

             // Guest
             function loadGuestVisitorListSB() {

                 js.ajax({
                      url: '@Url.Action("GetGuestVisitorListSB", "Secretary")',
                      type: 'GET',
                      data: {
                          startDate: formatDateSB(selectedStartDate),
                          endDate: formatDateSB(selectedEndDate),
                          timePeriod: timePeriod
                      },
                      success: function (data) {
                          $('#guestVisitorListContainer').html(data);
                          $('#guestVisitorModal').modal('show');

                          var table =js('#guestVisitorTable').DataTable({
                              "paging": true,
                              "ordering": true,
                              "info": true,
                              "pageLength": 10,
                              "searching": true,
                              "destroy": true,
                              dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                              buttons: [
                                  {
                                      extend: 'csvHtml5',
                                      text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                      titleAttr: 'CSV',
                                      exportOptions: {
                                          modifier: {
                                              selected: true
                                          }
                                      },
                                      action: exportIfSelected('csvHtml5')

                                  },
                                  {
                                      extend: 'excelHtml5',
                                      text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                      titleAttr: 'Excel',
                                      exportOptions: {
                                          modifier: {
                                              selected: true
                                          }
                                      },
                                      action: exportIfSelected('excelHtml5')
                                  },
                                  {
                                      extend: 'pdfHtml5',
                                      text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                      title: 'Complaint List',
                                      orientation: 'landscape',
                                      exportOptions: {
                                          modifier: {
                                              selected: true
                                          }
                                      },
                                      action: exportIfSelected('pdfHtml5')
                                  },
                                  {
                                      extend: 'print',
                                      text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                      titleAttr: 'Print',
                                      exportOptions: {
                                          modifier: {
                                              selected: true
                                          }
                                      },
                                      action: exportIfSelected('print')
                                  }
                              ]
                          });

                          $('#checkbox-all').on('click', function () {
                              var isChecked = $(this).prop('checked');

                              table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                              if (isChecked) {
                                  table.rows().select();
                              } else {
                                  table.rows().deselect();
                              }

                              table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                          });

                          $('#guestVisitorTable').on('change', '.row-checkbox', function () {
                              var row = js(this).closest('tr');
                              var table = js('#guestVisitorTable').DataTable();
                              var isChecked = js(this).prop('checked');

                              if (isChecked) {
                                  table.row(row).select();


                              } else {
                                  table.row(row).deselect();

                              }

                              var total = table.rows().count();
                              var checked = table.rows({ selected: true }).count();
                              js('#checkbox-all').prop('checked', total === checked);

                          });
                      },
                      error: function () {
                          alert('Failed to load data.');
                      }
                  });
              }

             // Delivery
             function loadDeliveryVisitorListSB() {

                  js.ajax({
                       url: '@Url.Action("GetDeliveryVisitorListSB", "Secretary")',
                      type: 'GET',
                      data: {
                          startDate: formatDateSB(selectedStartDate),
                          endDate: formatDateSB(selectedEndDate),
                          timePeriod: timePeriod
                      },
                       success: function (data) {
                           $('#DeliveryVisitorListContainer').html(data);
                           $('#DeliveryVisitorModal').modal('show');

                           var table =js('#DeliveryVisitorTable').DataTable({
                               "paging": true,
                               "ordering": true,
                               "info": true,
                               "pageLength": 10,
                               "searching": true,
                               "destroy": true,
                               dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                               buttons: [
                                   {
                                       extend: 'csvHtml5',
                                       text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                       titleAttr: 'CSV',
                                       exportOptions: {
                                           modifier: {
                                               selected: true
                                           }
                                       },
                                       action: exportIfSelected('csvHtml5')

                                   },
                                   {
                                       extend: 'excelHtml5',
                                       text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                       titleAttr: 'Excel',
                                       exportOptions: {
                                           modifier: {
                                               selected: true
                                           }
                                       },
                                       action: exportIfSelected('excelHtml5')
                                   },
                                   {
                                       extend: 'pdfHtml5',
                                       text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                       title: 'Complaint List',
                                       orientation: 'landscape',
                                       exportOptions: {
                                           modifier: {
                                               selected: true
                                           }
                                       },
                                       action: exportIfSelected('pdfHtml5')
                                   },
                                   {
                                       extend: 'print',
                                       text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                       titleAttr: 'Print',
                                       exportOptions: {
                                           modifier: {
                                               selected: true
                                           }
                                       },
                                       action: exportIfSelected('print')
                                   }
                               ]
                           });

                           $('#checkbox-all').on('click', function () {
                               var isChecked = $(this).prop('checked');

                               table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                               if (isChecked) {
                                   table.rows().select();
                               } else {
                                   table.rows().deselect();
                               }

                               table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                           });

                           $('#DeliveryVisitorTable').on('change', '.row-checkbox', function () {
                               var row = js(this).closest('tr');
                               var table = js('#DeliveryVisitorTable').DataTable();
                               var isChecked = js(this).prop('checked');

                               if (isChecked) {
                                   table.row(row).select();


                               } else {
                                   table.row(row).deselect();

                               }

                               var total = table.rows().count();
                               var checked = table.rows({ selected: true }).count();
                               js('#checkbox-all').prop('checked', total === checked);

                           });

                       },
                       error: function () {
                           alert('Failed to load data.');
                       }
                  });
             }

             // Vendor
             function loadVendorVisitorListSB() {

                   js.ajax({
                        url: '@Url.Action("GetVendorVisitorListSB", "Secretary")',
                       type: 'GET',
                       data: {
                           startDate: formatDateSB(selectedStartDate),
                           endDate: formatDateSB(selectedEndDate),
                           timePeriod: timePeriod
                       },
                        success: function (data) {
                            $('#VendorVisitorListContainer').html(data);
                            $('#VendorVisitorModal').modal('show');

                            var table = js('#VendorVisitorTable').DataTable({
                                "paging": true,
                                "ordering": true,
                                "info": true,
                                "pageLength": 10,
                                "searching": true,
                                "destroy": true,
                                dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                buttons: [
                                    {
                                        extend: 'csvHtml5',
                                        text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                        titleAttr: 'CSV',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('csvHtml5')

                                    },
                                    {
                                        extend: 'excelHtml5',
                                        text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                        titleAttr: 'Excel',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('excelHtml5')
                                    },
                                    {
                                        extend: 'pdfHtml5',
                                        text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                        title: 'Complaint List',
                                        orientation: 'landscape',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('pdfHtml5')
                                    },
                                    {
                                        extend: 'print',
                                        text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                        titleAttr: 'Print',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('print')
                                    }
                                ]
                            });

                            $('#checkbox-all').on('click', function () {
                                var isChecked = $(this).prop('checked');

                                table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                if (isChecked) {
                                    table.rows().select();
                                } else {
                                    table.rows().deselect();
                                }

                                table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                            });

                            $('#VendorVisitorTable').on('change', '.row-checkbox', function () {
                                var row = js(this).closest('tr');
                                var table = js('#VendorVisitorTable').DataTable();
                                var isChecked = js(this).prop('checked');

                                if (isChecked) {
                                    table.row(row).select();


                                } else {
                                    table.row(row).deselect();

                                }

                                var total = table.rows().count();
                                var checked = table.rows({ selected: true }).count();
                                js('#checkbox-all').prop('checked', total === checked);

                            });
                        },
                        error: function () {
                            alert('Failed to load data.');
                        }
                   });
             }

              // Service
             function loadServiceVisitorListSB() {

                   js.ajax({
                        url: '@Url.Action("GetServiceVisitorListSB", "Secretary")',
                       type: 'GET',
                       data: {
                           startDate: formatDateSB(selectedStartDate),
                           endDate: formatDateSB(selectedEndDate),
                           timePeriod: timePeriod
                       },
                        success: function (data) {
                            $('#ServiceVisitorListContainer').html(data);
                            $('#ServiceVisitorModal').modal('show');

                            var table = js('#ServiceVisitorTable').DataTable({
                                "paging": true,
                                "ordering": true,
                                "info": true,
                                "pageLength": 10,
                                "searching": true,
                                "destroy": true,
                                dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                buttons: [
                                    {
                                        extend: 'csvHtml5',
                                        text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                        titleAttr: 'CSV',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('csvHtml5')

                                    },
                                    {
                                        extend: 'excelHtml5',
                                        text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                        titleAttr: 'Excel',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('excelHtml5')
                                    },
                                    {
                                        extend: 'pdfHtml5',
                                        text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                        title: 'Complaint List',
                                        orientation: 'landscape',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('pdfHtml5')
                                    },
                                    {
                                        extend: 'print',
                                        text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                        titleAttr: 'Print',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('print')
                                    }
                                ]
                            });

                            $('#checkbox-all').on('click', function () {
                                var isChecked = $(this).prop('checked');

                                table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                if (isChecked) {
                                    table.rows().select();
                                } else {
                                    table.rows().deselect();
                                }

                                table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                            });

                            $('#VendorVisitorTable').on('change', '.row-checkbox', function () {
                                var row = js(this).closest('tr');
                                var table = js('#VendorVisitorTable').DataTable();
                                var isChecked = js(this).prop('checked');

                                if (isChecked) {
                                    table.row(row).select();


                                } else {
                                    table.row(row).deselect();

                                }

                                var total = table.rows().count();
                                var checked = table.rows({ selected: true }).count();
                                js('#checkbox-all').prop('checked', total === checked);

                            });
                        },
                        error: function () {
                            alert('Failed to load data.');
                        }
                   });
             }









             // Worker
             function loadWorkerVisitorListSB() {

                   js.ajax({
                        url: '@Url.Action("GetWorkerVisitorListSB", "Secretary")',
                       type: 'GET',
                       data: {
                           startDate: formatDateSB(selectedStartDate),
                           endDate: formatDateSB(selectedEndDate),
                           timePeriod: timePeriod
                       },
                        success: function (data) {
                            $('#WorkerVisitorListContainer').html(data);
                            $('#WorkerVisitorModal').modal('show');

                            var table = js('#WorkerVisitorTable').DataTable({
                                "paging": true,
                                "ordering": true,
                                "info": true,
                                "pageLength": 10,
                                "searching": true,
                                "destroy": true,
                                dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                buttons: [
                                    {
                                        extend: 'csvHtml5',
                                        text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                        titleAttr: 'CSV',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('csvHtml5')

                                    },
                                    {
                                        extend: 'excelHtml5',
                                        text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                        titleAttr: 'Excel',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('excelHtml5')
                                    },
                                    {
                                        extend: 'pdfHtml5',
                                        text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                        title: 'Complaint List',
                                        orientation: 'landscape',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('pdfHtml5')
                                    },
                                    {
                                        extend: 'print',
                                        text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                        titleAttr: 'Print',
                                        exportOptions: {
                                            modifier: {
                                                selected: true
                                            }
                                        },
                                        action: exportIfSelected('print')
                                    }
                                ]
                            });

                            $('#checkbox-all').on('click', function () {
                                var isChecked = $(this).prop('checked');

                                table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                if (isChecked) {
                                    table.rows().select();
                                } else {
                                    table.rows().deselect();
                                }

                                table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                            });

                            $('#WorkerVisitorTable').on('change', '.row-checkbox', function () {
                                var row = js(this).closest('tr');
                                var table = js('#WorkerVisitorTable').DataTable();
                                var isChecked = js(this).prop('checked');

                                if (isChecked) {
                                    table.row(row).select();


                                } else {
                                    table.row(row).deselect();

                                }

                                var total = table.rows().count();
                                var checked = table.rows({ selected: true }).count();
                                js('#checkbox-all').prop('checked', total === checked);

                            });

                        },
                        error: function () {
                            alert('Failed to load data.');
                        }
                   });
             }

                function exportIfSelected(actionName) {
                    return function (e, dt, button, config) {
                        if (dt.rows({ selected: true }).count() === 0) {
                            alert("Please select at least one record to export.");
                            return;
                        }



                        var originalAction = js.fn.dataTable.ext.buttons[actionName].action;
                        originalAction.call(this, e, dt, button, config);
                    };
                }


             js(document).ready(function () {

                  $('#collectedMaintenanceBar').click(function () {


                      let std = selectedStartDate;
                      let Etd = selectedEndDate;
                      ShowcollectedMaintenanceBarListSB(std, Etd);
                  });

                 function ShowcollectedMaintenanceBarListSB(startDate, endDate) {

                        $.ajax({
                            url: '@Url.Action("CollectedMaintenanceListSB", "Secretary")',
                            type: 'GET',
                            data: {
                                startDate: formatDateSB(startDate),
                                endDate: formatDateSB(endDate),
                            },
                            success: function (data) {
                                $('#collectedMaintenanceContent').html(data);
                                $('#collectedMaintenanceModal').modal('show');

                                var table = js('#collectedMaintenanceTable').DataTable({
                                    "paging": true,
                                    "ordering": true,
                                    "info": true,
                                    "pageLength": 10,
                                    "searching": true,
                                    "destroy": true,
                                    dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                    buttons: [
                                        {
                                            extend: 'csvHtml5',
                                            text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                            titleAttr: 'CSV',
                                            exportOptions: {
                                                modifier: {
                                                    selected: true
                                                }
                                            },
                                            action: exportIfSelected('csvHtml5')

                                        },
                                        {
                                            extend: 'excelHtml5',
                                            text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                            titleAttr: 'Excel',
                                            exportOptions: {
                                                modifier: {
                                                    selected: true
                                                }
                                            },
                                            action: exportIfSelected('excelHtml5')
                                        },
                                        {
                                            extend: 'pdfHtml5',
                                            text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                            title: 'Complaint List',
                                            orientation: 'landscape',
                                            exportOptions: {
                                                modifier: {
                                                    selected: true
                                                }
                                            },
                                            action: exportIfSelected('pdfHtml5')
                                        },
                                        {
                                            extend: 'print',
                                            text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                            titleAttr: 'Print',
                                            exportOptions: {
                                                modifier: {
                                                    selected: true
                                                }
                                            },
                                            action: exportIfSelected('print')
                                        }
                                    ]
                                });

                                $('#checkbox-all').on('click', function() {
                                    var isChecked = $(this).prop('checked');

                                    table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                    if (isChecked) {
                                        table.rows().select();
                                    } else {
                                        table.rows().deselect();
                                    }

                                    table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                                });

                                $('#collectedMaintenanceTable').on('change', '.row-checkbox', function() {
                                    var row = js(this).closest('tr');
                                    var table = js('#collectedMaintenanceTable').DataTable();
                                    var isChecked = js(this).prop('checked');

                                    if (isChecked) {
                                        table.row(row).select();


                                    } else {
                                        table.row(row).deselect();

                                    }

                                    var total = table.rows().count();
                                    var checked = table.rows({ selected: true }).count();
                                    js('#checkbox-all').prop('checked', total === checked);

                                });
                            },
                            error: function () {
                                alert("Failed to load data.");
                            }
                        });
                 }


                 $('#DueMaintenanceBar').click(function () {


                     let std = selectedStartDate;
                     let Etd = selectedEndDate;
                      ShowDueMaintenanceBarListSB(std, Etd);
                 });

                 function ShowDueMaintenanceBarListSB(startDate, endDate) {

                       $.ajax({
                           url: '@Url.Action("DueMaintenanceListSB", "Secretary")',
                           type: 'GET',
                           data: {
                               startDate: formatDateSB(startDate),
                               endDate: formatDateSB(endDate)

                           },
                           success: function (data) {
                               $('#DueMaintenanceContent').html(data);
                               $('#DueMaintenanceModal').modal('show');


                               var table = js('#DueMaintenanceTable').DataTable({
                                   "paging": true,
                                   "ordering": true,
                                   "info": true,
                                   "pageLength": 10,
                                   "searching": true,
                                   "destroy": true,
                                   dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                   buttons: [
                                       {
                                           extend: 'csvHtml5',
                                           text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                           titleAttr: 'CSV',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('csvHtml5')

                                       },
                                       {
                                           extend: 'excelHtml5',
                                           text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                           titleAttr: 'Excel',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('excelHtml5')
                                       },
                                       {
                                           extend: 'pdfHtml5',
                                           text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                           title: 'Complaint List',
                                           orientation: 'landscape',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('pdfHtml5')
                                       },
                                       {
                                           extend: 'print',
                                           text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                           titleAttr: 'Print',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('print')
                                       }
                                   ]
                               });

                               $('#checkbox-all').on('click', function () {
                                   var isChecked = $(this).prop('checked');

                                   table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                   if (isChecked) {
                                       table.rows().select();
                                   } else {
                                       table.rows().deselect();
                                   }

                                   table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                               });

                               $('#DueMaintenanceTable').on('change', '.row-checkbox', function () {
                                   var row = js(this).closest('tr');
                                   var table = js('#DueMaintenanceTable').DataTable();
                                   var isChecked = js(this).prop('checked');

                                   if (isChecked) {
                                       table.row(row).select();


                                   } else {
                                       table.row(row).deselect();

                                   }

                                   var total = table.rows().count();
                                   var checked = table.rows({ selected: true }).count();
                                   js('#checkbox-all').prop('checked', total === checked);

                               });

                           },
                           error: function () {
                               alert("Failed to load data.");
                           }
                       });
                 }



                 //Expence new
                 $('#CompletedExpenceBar').click(function () {


                     let std = selectedStartDate;
                     let Etd = selectedEndDate;
                      ShowCompletedExpenceBarListSB(std, Etd);
                 });

                 function ShowCompletedExpenceBarListSB(StartDate, EndDate) {

                       $.ajax({
                           url: '@Url.Action("CompletedExpenceListSB", "Secretary")',
                           type: 'GET',
                           data: {
                               startDate: StartDate,
                               endDate: EndDate
                           },
                           success: function (data) {
                               $('#CompletedExpenceContent').html(data);
                               $('#CompletedExpenceModal').modal('show');


                               var table = js('#CompletedExpenceTable').DataTable({
                                   "paging": true,
                                   "ordering": true,
                                   "info": true,
                                   "pageLength": 10,
                                   "searching": true,
                                   "destroy": true,
                                   dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                   buttons: [
                                       {
                                           extend: 'csvHtml5',
                                           text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                           titleAttr: 'CSV',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('csvHtml5')

                                       },
                                       {
                                           extend: 'excelHtml5',
                                           text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                           titleAttr: 'Excel',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('excelHtml5')
                                       },
                                       {
                                           extend: 'pdfHtml5',
                                           text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                           title: 'Complaint List',
                                           orientation: 'landscape',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('pdfHtml5')
                                       },
                                       {
                                           extend: 'print',
                                           text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                           titleAttr: 'Print',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('print')
                                       }
                                   ]
                               });


                               $('#checkbox-all').on('click', function () {
                                   var isChecked = $(this).prop('checked');

                                   table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                   if (isChecked) {
                                       table.rows().select();
                                   } else {
                                       table.rows().deselect();
                                   }

                                   table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                               });

                               $('#CompletedExpenceTable').on('change', '.row-checkbox', function () {
                                   var row = js(this).closest('tr');
                                   var table = js('#CompletedExpenceTable').DataTable();
                                   var isChecked = js(this).prop('checked');

                                   if (isChecked) {
                                       table.row(row).select();


                                   } else {
                                       table.row(row).deselect();

                                   }

                                   var total = table.rows().count();
                                   var checked = table.rows({ selected: true }).count();
                                   js('#checkbox-all').prop('checked', total === checked);

                               });


                           },
                           error: function () {
                               alert("Failed to load data.");
                           }
                       });
                 }



                 $('#PendingExpenceBar').click(function () {


                     let std = selectedStartDate;
                     let Etd = selectedEndDate;
                      ShowPendingExpenceBarListSB(std, Etd);
                 });

                 function ShowPendingExpenceBarListSB(StartDate, EndDate) {

                       $.ajax({
                           url: '@Url.Action("PendingExpenceListSB", "Secretary")',
                           type: 'GET',
                           data: {
                               startDate: StartDate,
                               endDate: EndDate
                           },
                           success: function (data) {
                               $('#PendingExpenceContent').html(data);
                               $('#PendingExpenceModal').modal('show');

                               var table = js('#PendingExpenceTable').DataTable({
                                   "paging": true,
                                   "ordering": true,
                                   "info": true,
                                   "pageLength": 10,
                                   "searching": true,
                                   "destroy": true,
                                   dom: '<"row mb-3"<"col-md-6 d-flex gap-2 align-items-center"B><"col-md-6 d-flex align-items-center justify-content-end"f>>rtip',
                                   buttons: [
                                       {
                                           extend: 'csvHtml5',
                                           text: '<img src="/Content/img/Csv.png"  title="CSV" alt="CSV" height="30" width="30"/>',
                                           titleAttr: 'CSV',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('csvHtml5')

                                       },
                                       {
                                           extend: 'excelHtml5',
                                           text: '<img src="/Content/img/Xls.png"  title="Excel" alt="Excel" height="30" width="30"/>',
                                           titleAttr: 'Excel',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('excelHtml5')
                                       },
                                       {
                                           extend: 'pdfHtml5',
                                           text: '<img src="/Content/img/Pdf.png"  title="PDF" alt="PDF" height="30" width="30"/>',
                                           title: 'Complaint List',
                                           orientation: 'landscape',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('pdfHtml5')
                                       },
                                       {
                                           extend: 'print',
                                           text: '<img src="/Content/img/Print.png"  title="Print" alt="Print" height="30" width="30"/>',
                                           titleAttr: 'Print',
                                           exportOptions: {
                                               modifier: {
                                                   selected: true
                                               }
                                           },
                                           action: exportIfSelected('print')
                                       }
                                   ]
                               });

                               $('#checkbox-all').on('click', function () {
                                   var isChecked = $(this).prop('checked');

                                   table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

                                   if (isChecked) {
                                       table.rows().select();
                                   } else {
                                       table.rows().deselect();
                                   }

                                   table.rows().nodes().to$().find('.row-checkbox').trigger('change');
                               });

                               $('#PendingExpenceTable').on('change', '.row-checkbox', function () {
                                   var row = js(this).closest('tr');
                                   var table = js('#PendingExpenceTable').DataTable();
                                   var isChecked = js(this).prop('checked');

                                   if (isChecked) {
                                       table.row(row).select();


                                   } else {
                                       table.row(row).deselect();

                                   }

                                   var total = table.rows().count();
                                   var checked = table.rows({ selected: true }).count();
                                   js('#checkbox-all').prop('checked', total === checked);

                               });

                           },
                           error: function () {
                               alert("Failed to load data.");
                           }
                       });
                 }

             });


                function formatJsonDate(jsonDate) {
                    let timestamp = parseInt(jsonDate.replace(/[^0-9]/g, ''));
                    let date = new Date(timestamp);
                    const year = date.getFullYear();
                    const month = ('0' + (date.getMonth() + 1)).slice(-2);
                    const day = ('0' + date.getDate()).slice(-2);
                    return `${year}-${month}-${day}`;
                }


                 function loadMeetingsSB(UPMtoday) {

                     $.ajax({
                         url: '@Url.Action("GetUpcomingMeetingsSB", "Secretary")',
                         type: 'GET',
                         data: {
                             UPMtoday: UPMtoday
                         },
                         success: function (data) {
                             let table = document.getElementById("meetingTable");
                             table.innerHTML = "";
                             data.forEach(meeting => {
                                 table.innerHTML += `<tr>

                                     <td>${meeting.MeetingTitle}</td>
                                     <td>${meeting.StaffName}</td>
                                     <td>${meeting.MeetingAgenda}</td>
                                     <td>${formatJsonDate(meeting.MeetingDate)}</td>
                                     <td>${meeting.MeetingLocation}</td >
                                     <td>${formatJsonDate(meeting.CreatedDate)}</td >
                                 </tr>`;
                             });
                         },
                         error: function () {
                             alert("Failed to load meetings data.");
                         }
                     });
                 }


                 function loadEventsSB(UPMtoday) {
                     $.ajax({
                         url: '@Url.Action("GetUpcomingEventSB", "Secretary")',
                         type: 'GET',
                         data: {
                             UPMtoday: UPMtoday
                         },
                         success: function (data) {
                             let table = document.getElementById("eventTable");
                             table.innerHTML = "";
                             data.forEach(event => {
                                 table.innerHTML += `<tr>

                                     <td>${event.SubType}</td>
                                     <td>${event.EventName}</td>
                                     <td>${event.VendorName}</td>
                                     <td>${event.Description}</td >
                                     <td>${event.Place}</td>
                                     <td>${formatJsonDate(event.FromDate)}</td>
                                     <td>${formatJsonDate(event.ToDate)}</td >

                                 </tr>`;
                             });
                         },
                         error: function () {
                             alert("Failed to load event data.");
                         }
                     });
                 }

    </script>


    <!-- General JS Scripts -->
    <script src="~/Content/modules/jquery.min.js"></script>
    <script src="~/Content/modules/popper.js"></script>
    <script src="~/Content/modules/tooltip.js"></script>
    <script src="~/Content/modules/bootstrap/js/bootstrap.min.js"></script>
    <script src="~/Content/modules/nicescroll/jquery.nicescroll.min.js"></script>

    <script src="~/Content/js/stisla.js"></script>

    <!-- JS Libraies -->
    <script src="~/Content/modules/simple-weather/jquery.simpleWeather.min.js"></script>
    <script src="~/Content/modules/chart.min.js"></script>
    <script src="~/Content/modules/jqvmap/dist/jquery.vmap.min.js"></script>
    <script src="~/Content/modules/jqvmap/dist/maps/jquery.vmap.world.js"></script>
    <script src="~/Content/modules/summernote/summernote-bs4.js"></script>
    <script src="~/Content/modules/chocolat/dist/js/jquery.chocolat.min.js"></script>
    <link href="~/Content/css/components.css" rel="stylesheet" />

    <script src="~/Content/modules/bootstrap-daterangepicker/daterangepicker.js"></script>
    <script src="~/Content/modules/bootstrap-colorpicker/dist/js/bootstrap-colorpicker.min.js"></script>
    <script src="~/Content/modules/bootstrap-timepicker/js/bootstrap-timepicker.min.js"></script>

    <!-- Template JS File -->
    <script src="~/Content/js/scripts.js"></script>
    <script src="~/Content/js/custom.js"></script>
</body>
</html>




@model List<GSTSMSLibrary.Secretary.Secretary>

<div class="modal-header bg-success text-white" id="Visitor">
    <h5 class="modal-title text-center w-100" id="Expensetitle"> List</h5>
    <button type="button" class="close text-danger" data-dismiss="modal" aria-label="Close">
        <span>&times;</span>
    </button>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered table-striped" id="Expensetable" style="width:100%">
                        <thead style="background-color: lightsteelblue; color: black;">
                            <tr>
                                <th class="text-center">
                                    <div class="custom-checkbox custom-control">
                                        <input type="checkbox" class="custom-control-input" id="checkbox-all">
                                        <label for="checkbox-all" class="custom-control-label">&nbsp;</label>

                                    </div>
                                </th>
                                <th>Sr No</th>
                                <th>Expense Code</th>
                                @if (Model.FirstOrDefault()?.TransactionId == null)
                                {
                                    <th> Total Expense</th>
                                    <th>Paid Expense</th>

                                }
                                <th>Amount (₹)</th>
                                @*<th>SubType</th>*@
                                <th>Vendor  Name</th>
                                <th>Description</th>
                                @if (Model.FirstOrDefault()?.TransactionId != null)
                                {
                                    <th>Transaction ID</th>
                                    <th>Paid Date</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <div class="custom-checkbox custom-control">
                                            @{
                                                var checkboxId = "checkbox-" + item.ExpenseCode + "-" + item.SrNo;
                                            }
                                            <input type="checkbox" class="custom-control-input row-checkbox" id="@checkboxId" />
                                            <label for="@checkboxId" class="custom-control-label">&nbsp;</label>
                                        </div>
                                    </td>
                                    <td>@item.SrNo</td>
                                    <td>@item.ExpenseCode</td>
                                    @if (Model.FirstOrDefault()?.TransactionId == null)
                                    {
                                        <td>@item.TotalAmount</td>
                                        <td>@item.PaidAmount</td>
                                    }
                                    <td>@item.Amount</td>
                                    @*<td>@item.SubType</td>*@
                                    <td>@item.VendorName</td>
                                    <td>@item.Description</td>
                                    @if (Model.FirstOrDefault()?.TransactionId != null)
                                    {
                                        <td>@(string.IsNullOrEmpty(item.TransactionId) ? "-" : item.TransactionId)</td>
                                        <td>@item.PaidDate.ToString("dd-MM-yyyy")</td>
                                    }


                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<link href="~/Content/modules/datatables/datatables.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery-3.7.0.min.js"></script>
<script src="~/Content/modules/datatables/datatables.min.js"></script>
<script src="~/Content/modules/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"></script>

<script src="~/Scripts/bootstrap.bundle.min.js"></script>
<link href="~/Content/css/StyleCSSSP.css" rel="stylesheet" />


<script type="text/javascript">
    var js = jQuery.noConflict(true);
    js(document).ready(function () {
        var table = js('#Expensetable').DataTable({
            paging: true,
            ordering: true,
            info: true,
            pageLength: 5,
            searching: true,
            responsive: true,
            retrieve: true,
            dom: 'Bfrtip',
            dom: '<"row mb-3"' +
                '<"col-md-6 d-flex gap-2 align-items-center" B>' +           // Buttons - left
                '<"col-md-6 d-flex align-items-center justify-content-end" f>' + // Search - right, vertically centered
                '>rtip',
            buttons: [
                {
                    extend: 'csvHtml5',
                    text: '<img src="/Content/img/icons8-csv-64 (1).png" title="CSV" alt="CSV" height="30" width="30"/>',
                    title: function () {
                        var today = new Date();
                        var formattedDate = today.toLocaleDateString('en-GB'); // dd/mm/yyyy
                        return 'Expense List ';
                    },
                    exportOptions: {
                        modifier: {
                            selected: true
                        }
                    },
                    action: exportIfSelected('csvHtml5')

                },
                {
                    extend: 'excelHtml5',
                    text: '<img src="/Content/img/icons8-xls-64 (1).png"  title="Excel" alt="Excel" height="30" width="30"/>',
                    title: function () {
                       return 'Expense List ';
                    },
                    exportOptions: {
                        modifier: {
                            selected: true
                        }
                    },
                    action: exportIfSelected('excelHtml5')
                },
                {
                    extend: 'pdfHtml5',
                    text: '<img src="/Content/img/icons8-pdf-64 (1).png"  title="Excel" alt="Excel" height="30" width="30"/>',
                    title: function () {
                        var today = new Date();
                        var formattedDate = today.toLocaleDateString('en-GB'); // dd/mm/yyyy
                        return 'Expense List ';
                    },
                    orientation: 'landscape',
                    customize: function (doc) {
                        var now = new Date();
                        var jsDate = now.getDate() + '-' + (now.getMonth() + 1) + '-' + now.getFullYear();

                        doc.content.splice(0, 0, {
                            text: 'Date: ' + jsDate,
                            margin: [0, 0, 0, 12],
                            alignment: 'right',
                            fontSize: 10
                        });
                    },
                    orientation: 'landscape',
                    exportOptions: {
                        modifier: {
                            selected: true
                        }
                    },
                    action: exportIfSelected('pdfHtml5')
                },
                {
                    extend: 'print',
                    text: '<img src="/Content/img/icons8-print-64 (1).png"  title="Print" alt="Print" height="30" width="30"/>',
                    titleAttr: 'Print',
                    exportOptions: {
                        modifier: {
                            selected: true
                        }
                    },
                    action: exportIfSelected('print')
                }
            ]
        });

        // Handle "Select All" checkbox
        $('#checkbox-all').on('click', function () {
            var isChecked = $(this).prop('checked');

            // Get all rows (including those not currently visible)
            table.rows().nodes().to$().find('.row-checkbox').prop('checked', isChecked);

            // Select or Deselect rows in DataTable
            if (isChecked) {
                table.rows().select();
            } else {
                table.rows().deselect();
            }

            // Update the custom checkbox styling
            table.rows().nodes().to$().find('.row-checkbox').trigger('change');
        });

        // Handle individual row checkboxes
        $('#Expensetable').on('change', '.row-checkbox', function () {
            var row = js(this).closest('tr');
            var table = js('#Expensetable').DataTable();
            var isChecked = js(this).prop('checked');

            if (isChecked) {
                table.row(row).select();


            } else {
                table.row(row).deselect();

            }

            // Master checkbox state update
            var total = table.rows().count();
            var checked = table.rows({ selected: true }).count();
            js('#checkbox-all').prop('checked', total === checked);

        });
    });

    function exportIfSelected(actionName) {
        return function (e, dt, button, config) {
            if (dt.rows({ selected: true }).count() === 0) {
                alert("Please select at least one record to export.");
                return;
            }


            // Get original button definition from DataTables buttons extension
            var originalAction = js.fn.dataTable.ext.buttons[actionName].action;
            originalAction.call(this, e, dt, button, config);
        };
    }


</script>
